{"ast":null,"code":"import _classCallCheck from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\DS\\\\react-demo\\\\src\\\\doctor\\\\doctorHome.js\";\nimport React from 'react';\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport { Button, Card, CardHeader, Col, Modal, ModalBody, ModalHeader, Row } from 'reactstrap'; //import * as DOCTOR_API from \"./api/doctor-api\"\n//import * as PATIENT_API from \"./api/patient-api\"\n//import * as CAREGIVER_API from \"./api/caregiver-api\"\n\nimport * as USER_API from \"../userapi/user-api\";\nimport UserTable from './userTable';\n\nvar DoctorHome =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DoctorHome, _React$Component);\n\n  function DoctorHome(props) {\n    var _this;\n\n    _classCallCheck(this, DoctorHome);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DoctorHome).call(this));\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DoctorHome).call(this, props));\n    _this.state = {\n      selected: false,\n      collapseForm: false,\n      tableData: [],\n      isLoaded: false,\n      errorStatus: 0,\n      error: null\n    };\n    _this.toggleForm = _this.toggleForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reload = _this.reload.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DoctorHome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchUsers();\n    }\n  }, {\n    key: \"fetchUsers\",\n    value: function fetchUsers() {\n      var _this2 = this;\n\n      return USER_API.getUsers(function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this2.state.tableData = result;\n          _this2.state.isLoaded = true;\n\n          _this2.setState(_this2.state);\n        } else {\n          _this2.state.errorStatus = status;\n          _this2.state.error = err;\n\n          _this2.setState(_this2.state);\n        }\n      });\n    }\n  }, {\n    key: \"toggleForm\",\n    value: function toggleForm() {\n      this.state.selected = !this.state.selected;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      this.state.isLoaded = false;\n      this.setState(this.state);\n      this.toggleForm();\n      this.fetchUsers();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \" Users Management \")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '8',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.toggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"  Add person \"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '8',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.isLoaded && React.createElement(UserTable, {\n        tableData: this.state.tableData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), this.state.errorStatus > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatus,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return DoctorHome;\n}(React.Component);\n\nexport default DoctorHome;","map":{"version":3,"sources":["D:\\DS\\react-demo\\src\\doctor\\doctorHome.js"],"names":["React","APIResponseErrorMessage","Button","Card","CardHeader","Col","Modal","ModalBody","ModalHeader","Row","USER_API","UserTable","DoctorHome","props","state","selected","collapseForm","tableData","isLoaded","errorStatus","error","toggleForm","bind","reload","fetchUsers","getUsers","result","status","err","setState","size","offset","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    Col,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Row\r\n} from 'reactstrap';\r\n \r\n//import * as DOCTOR_API from \"./api/doctor-api\"\r\n//import * as PATIENT_API from \"./api/patient-api\"\r\n//import * as CAREGIVER_API from \"./api/caregiver-api\"\r\nimport * as USER_API from \"../userapi/user-api\"\r\nimport UserTable from './userTable'\r\n  \r\n\r\n\r\nclass DoctorHome extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        super(props);\r\n      \r\n        this.state = {\r\n            selected: false,\r\n            collapseForm: false,\r\n            tableData: [],\r\n            isLoaded: false,\r\n            errorStatus: 0,\r\n            error: null\r\n        };\r\n\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.reload = this.reload.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchUsers();\r\n    }\r\n\r\n    fetchUsers() {\r\n        return USER_API.getUsers((result, status, err) => {\r\n\r\n            if (result !== null && status === 200) {\r\n                this.state.tableData = result;\r\n                this.state.isLoaded = true;\r\n                this.setState(this.state);\r\n            } else {\r\n                this.state.errorStatus = status;\r\n                this.state.error = err;\r\n                this.setState(this.state);\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleForm() {\r\n        this.state.selected = !this.state.selected;\r\n        this.setState(this.state);\r\n    }\r\n\r\n\r\n    reload() {\r\n        this.state.isLoaded = false;\r\n        this.setState(this.state);\r\n        this.toggleForm();\r\n        this.fetchUsers();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CardHeader>\r\n                    <strong> Users Management </strong>\r\n                </CardHeader>\r\n                <Card>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col sm={{size: '8', offset: 1}}>\r\n\r\n\r\n\r\n\r\n                   \r\n                        <Button type={\"submit\"}  onClick={this.toggleForm}>  Add person </Button>\r\n \r\n\r\n\r\n\r\n\r\n                            \r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col sm={{size: '8', offset: 1}}>\r\n                            {this.state.isLoaded && <UserTable tableData = {this.state.tableData}/>}\r\n                            {this.state.errorStatus > 0 && <APIResponseErrorMessage\r\n                                                            errorStatus={this.state.errorStatus}\r\n                                                            error={this.state.error}\r\n                                                        />   }\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n\r\n              \r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default DoctorHome;\r\n"]},"metadata":{},"sourceType":"module"}