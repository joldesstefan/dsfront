{"ast":null,"code":"import _classCallCheck from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\DS\\\\react-demo\\\\src\\\\patient\\\\patient-page.js\";\nimport React from 'react';\nimport validate from \"./validators/patient-validators\";\nimport Button from \"react-bootstrap/Button\";\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport { Col, Row } from \"reactstrap\";\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport { Redirect } from 'react-router';\nimport * as PATIENT_API from \"./api/patient-api\";\nimport * as CAREGIVER_API from \"../caregiver/api/caregiver-api\";\nimport * as MEDICATION_PERIOD_API from \"../medication-period/api/medication-period-api\";\nimport { Card, CardHeader, Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport PatientCaregiverTable from './patient-caregiver-table';\nimport MedicationPeriodTable from '../medication-period/medication-period-table';\nimport MedicationPeriodForm from '../medication-period/medication-period-form';\n\nvar PatientPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PatientPage, _React$Component);\n\n  function PatientPage(props) {\n    var _this;\n\n    _classCallCheck(this, PatientPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientPage).call(this, props));\n    _this.state = {\n      redirect: false,\n      redirectTo: \"/\",\n      patientId: props.match.params.id,\n      patient: null,\n      caregiver: null,\n      caregiverToSet: null,\n      caregiverToSetLoaded: false,\n      isLoadedCaregiver: false,\n      isLoaded: false,\n      tableDataCaregiver: [],\n      isLoadedTableDataCaregiver: false,\n      tableDataMedicationPeriod: [],\n      isLoadedTableDataMedicationPeriod: false,\n      errorStatus: 0,\n      error: \"\",\n      errorStatusCaregiver: 0,\n      errorCaregiver: \"\",\n      errorStatusCaregiverTable: 0,\n      errorCaregiverTable: \"\",\n      errorStatusMedicationPeriodTable: 0,\n      errorMedicationPeriodTable: \"\",\n      insertMedicationPeriod: false,\n      showMessage: false,\n      messsage: \"\",\n      formIsValid: false,\n      formControls: {\n        name: {\n          value: '',\n          placeholder: 'What is the patient\\'s name?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: false\n          }\n        },\n        username: {\n          value: '',\n          placeholder: 'What is the patient\\'s Username?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: true\n          }\n        },\n        password: {\n          value: '',\n          placeholder: 'What is the patient\\'s Password?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: false\n          }\n        },\n        birthDate: {\n          value: '',\n          placeholder: 'What is the patient\\'s Birth Date?...YYYY-MM-DD',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 10,\n            isRequired: false,\n            dateValidator: true\n          }\n        },\n        gender: {\n          value: '',\n          placeholder: 'What is the patient\\'s Gender ?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: false\n          }\n        },\n        address: {\n          value: '',\n          placeholder: 'What is the patient\\'s Address ?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: false\n          }\n        },\n        medicalRecord: {\n          value: '',\n          placeholder: 'What is the patient\\'s Medical Record ?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: false\n          }\n        }\n      }\n    };\n    _this.fetchPatient = _this.fetchPatient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.registerPatient = _this.registerPatient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toogleMessage = _this.toogleMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goToPatientHome = _this.goToPatientHome.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.afterFetchPatient = _this.afterFetchPatient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deletePatient = _this.deletePatient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchCaregiver = _this.fetchCaregiver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchTableDataCaregiver = _this.fetchTableDataCaregiver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setCaregiver = _this.setCaregiver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.registerToSetCaregiver = _this.registerToSetCaregiver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRegisterToSetCaregiver = _this.handleRegisterToSetCaregiver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reloadPage = _this.reloadPage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleInsertMedicationPeriod = _this.toggleInsertMedicationPeriod.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchTableDataMediationPeriod = _this.fetchTableDataMediationPeriod.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reloadMedicationPeriods = _this.reloadMedicationPeriods.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PatientPage, [{\n    key: \"toggleInsertMedicationPeriod\",\n    value: function toggleInsertMedicationPeriod() {\n      this.state.insertMedicationPeriod = !this.state.insertMedicationPeriod;\n    }\n  }, {\n    key: \"fetchPatient\",\n    value: function fetchPatient() {\n      var _this2 = this;\n\n      var newParams = {\n        \"id\": this.state.patientId\n      };\n      return PATIENT_API.getPatientById(newParams, function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this2.state.patient = result;\n          _this2.state.formControls.name.value = result.name;\n          _this2.state.formControls.username.value = result.username;\n          _this2.state.formControls.password.value = result.password;\n          _this2.state.formControls.birthDate.value = result.birthDate;\n          _this2.state.formControls.gender.value = result.gender;\n          _this2.state.formControls.address.value = result.address;\n          _this2.state.formControls.medicalRecord.value = result.medicalRecord;\n          _this2.state.isLoaded = true;\n\n          _this2.setState(_this2.state);\n\n          _this2.afterFetchPatient();\n        } else {\n          _this2.state.errorStatus = status;\n          _this2.state.error = err;\n\n          _this2.setState(_this2.state);\n        }\n      });\n    }\n  }, {\n    key: \"fetchCaregiver\",\n    value: function fetchCaregiver() {\n      var _this3 = this;\n\n      if (this.state.patient.caregiverId != null) {\n        var newParams = {\n          \"id\": this.state.patient.caregiverId\n        };\n        return CAREGIVER_API.getCaregiverById(newParams, function (result, status, err) {\n          if (result !== null && status === 200) {\n            _this3.state.caregiver = result;\n            _this3.state.isLoadedCaregiver = true;\n\n            _this3.setState(_this3.state);\n          } else {\n            _this3.state.errorStatusCaregiver = status;\n            _this3.state.errorCaregiver = err;\n\n            _this3.setState(_this3.state);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"fetchTableDataCaregiver\",\n    value: function fetchTableDataCaregiver() {\n      var _this4 = this;\n\n      return CAREGIVER_API.getCaregiver(function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this4.state.tableDataCaregiver = result; // console.log(\"USer resumt : \" + result);\n\n          _this4.state.isLoadedTableDataCaregiver = true;\n\n          _this4.setState(_this4.state);\n        } else {\n          _this4.state.errorStatusCaregiverTable = status;\n          _this4.state.errorCaregiverTable = err;\n\n          _this4.setState(_this4.state);\n        }\n      });\n    }\n  }, {\n    key: \"fetchTableDataMediationPeriod\",\n    value: function fetchTableDataMediationPeriod() {\n      var _this5 = this;\n\n      var mediationPeriod = {\n        patientId: this.state.patientId\n      };\n      return MEDICATION_PERIOD_API.getMedicationPeriodByPatient(mediationPeriod, function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this5.state.tableDataMedicationPeriod = result; // console.log(\"USer resumt : \" + result);\n\n          _this5.state.isLoadedTableDataMedicationPeriod = true;\n\n          _this5.setState(_this5.state);\n        } else {\n          _this5.state.errorMedicationPeriodTable = status;\n          _this5.state.errorStatusMedicationPeriodTable = err;\n\n          _this5.setState(_this5.state);\n        }\n      });\n    }\n  }, {\n    key: \"reloadMedicationPeriods\",\n    value: function reloadMedicationPeriods() {\n      this.isLoadedTableDataMedicationPeriod = false;\n      this.fetchTableDataMediationPeriod();\n    }\n  }, {\n    key: \"reloadPage\",\n    value: function reloadPage() {\n      this.state.isLoadedTableDataCaregiver = false;\n      this.state.isLoadedCaregiver = false;\n      this.state.isLoaded = false;\n      this.setState(this.state);\n      this.fetchPatient();\n      this.fetchTableDataCaregiver();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.state.isLoadedTableDataCaregiver = false;\n      this.state.isLoadedCaregiver = false;\n      this.state.isLoaded = false;\n      this.setState(this.state);\n      this.fetchPatient();\n      this.fetchTableDataCaregiver();\n      this.fetchTableDataMediationPeriod();\n    }\n  }, {\n    key: \"afterFetchPatient\",\n    value: function afterFetchPatient() {\n      var formIsValid = true;\n\n      for (var formElementName in this.state.formControls) {\n        this.state.formControls[formElementName].valid = validate(this.state.formControls[formElementName].value, this.state.formControls[formElementName].validationRules);\n        this.setState(this.state);\n        formIsValid = this.state.formControls[formElementName].valid && formIsValid;\n      }\n\n      var newState = this.state;\n      newState.formIsValid = formIsValid;\n      this.setState(newState);\n      this.fetchCaregiver();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var name = event.target.name;\n      var value = event.target.value;\n      var updatedControls = this.state.formControls;\n      var updatedFormElement = updatedControls[name];\n      updatedFormElement.value = value;\n      updatedFormElement.touched = true;\n      updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n      updatedControls[name] = updatedFormElement;\n      var formIsValid = true;\n\n      for (var updatedFormElementName in updatedControls) {\n        formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\n      }\n\n      var newState = this.state;\n      newState.formControls = updatedControls;\n      newState.formIsValid = formIsValid;\n      this.setState(newState);\n    }\n  }, {\n    key: \"registerPatient\",\n    value: function registerPatient(patient) {\n      var _this6 = this;\n\n      return PATIENT_API.postUpdatePatient(patient, function (result, status, error) {\n        if (result !== null && (status === 200 || status === 201)) {\n          console.log(\"Successfully updated patient with id: \" + result);\n          _this6.state.messsage = \"Successfully updated patient with id: \" + result;\n          _this6.state.showMessage = true;\n\n          _this6.setState(_this6.state);\n        } else {\n          var newState = _this6.state;\n          newState.errorStatus = status;\n          newState.error = error;\n\n          _this6.setState(newState);\n        }\n      });\n    }\n  }, {\n    key: \"deletePatient\",\n    value: function deletePatient(patientId) {\n      var _this7 = this;\n\n      return PATIENT_API.deletePatient(patientId, function (result, status, error) {\n        if (result !== null && (status === 200 || status === 201)) {\n          console.log(\"Successfully deleted patient with id: \" + result);\n          _this7.state.messsage = \"Successfully deleted patient with id: \" + result;\n          _this7.state.showMessage = true;\n\n          _this7.setState(_this7.state);\n        } else {\n          var newState = _this7.state;\n          newState.errorStatus = status;\n          newState.error = error;\n\n          _this7.setState(newState);\n        }\n      });\n    }\n  }, {\n    key: \"toogleMessage\",\n    value: function toogleMessage() {\n      this.state.showMessage = false;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"goToPatientHome\",\n    value: function goToPatientHome() {\n      this.state.redirectTo = \"/doctorHome\";\n      this.state.redirect = true;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var patient = {\n        id: this.state.patientId,\n        name: this.state.formControls.name.value,\n        username: this.state.formControls.username.value,\n        password: this.state.formControls.password.value,\n        birthDate: this.state.formControls.birthDate.value,\n        gender: this.state.formControls.gender.value,\n        address: this.state.formControls.address.value,\n        medicalRecord: this.state.formControls.medicalRecord.value\n      };\n      console.log(patient);\n      this.registerPatient(patient);\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete() {\n      var patientId = this.state.patientId;\n      this.deletePatient(patientId);\n    }\n  }, {\n    key: \"setCaregiver\",\n    value: function setCaregiver(caregiver) {\n      console.log(JSON.stringify(caregiver));\n      this.state.caregiverToSet = caregiver;\n      this.state.caregiverToSetLoaded = true;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"registerToSetCaregiver\",\n    value: function registerToSetCaregiver(patient) {\n      var _this8 = this;\n\n      console.log(JSON.stringify(patient));\n      return PATIENT_API.setCaregiverPatient(patient, function (result, status, error) {\n        if (result !== null && (status === 200 || status === 201)) {\n          console.log(\"Successfully setted caregiver  \" + result);\n          _this8.state.messsage = \"Successfully setted caregiver  \" + result;\n          _this8.state.showMessage = true;\n\n          _this8.setState(_this8.state);\n        } else {\n          var newState = _this8.state;\n          newState.errorStatus = status;\n          newState.error = error;\n\n          _this8.setState(newState);\n        }\n      });\n    }\n  }, {\n    key: \"handleRegisterToSetCaregiver\",\n    value: function handleRegisterToSetCaregiver() {\n      var patient = {\n        id: this.state.patient.id,\n        caregiverId: this.state.caregiverToSet.id\n      };\n      this.registerToSetCaregiver(patient);\n      this.state.caregiverToSetLoaded = null;\n      this.state.caregiverToSet = null;\n      this.setState(this.state);\n      this.reloadPage();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"REDER);\");\n      console.log(this.state.isLoaded);\n      console.log(this.state.redirect);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, this.state.redirect === false && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, \" \", this.state.patientId), this.state.redirect === false && this.state.isLoaded === true && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, \" \", JSON.stringify(this.state.patient)), \" \", React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, \" \", this.state.patientId)), this.state.redirect === true && React.createElement(Redirect, {\n        to: this.state.redirectTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.goToPatientHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, \"  Go to Doctor Home Page \"), this.state.errorStatus > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatus,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        id: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"nameField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, \" Name: \"), React.createElement(Input, {\n        name: \"name\",\n        id: \"nameField\",\n        placeholder: this.state.formControls.name.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.name.value,\n        touched: this.state.formControls.name.touched ? 1 : 0,\n        valid: this.state.formControls.name.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }), this.state.formControls.name.touched && !this.state.formControls.name.valid && React.createElement(\"div\", {\n        className: \"error-message row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, \" * Name must have at least 3 characters \")), React.createElement(FormGroup, {\n        id: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"usernameField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, \" Username: \"), React.createElement(Input, {\n        name: \"username\",\n        id: \"usernameField\",\n        placeholder: this.state.formControls.username.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.username.value,\n        touched: this.state.formControls.username.touched ? 1 : 0,\n        valid: this.state.formControls.username.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }), this.state.formControls.username.touched && !this.state.formControls.username.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, \" * Username must have at least 3 characters\")), React.createElement(FormGroup, {\n        id: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"passwordField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, \" Password: \"), React.createElement(Input, {\n        name: \"password\",\n        id: \"passwordField\",\n        placeholder: this.state.formControls.password.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.password.value,\n        touched: this.state.formControls.password.touched ? 1 : 0,\n        valid: this.state.formControls.password.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }), this.state.formControls.password.touched && !this.state.formControls.password.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, \" * Password must have at least 3 characters\")), React.createElement(FormGroup, {\n        id: \"birthDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"birthDateField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, \" birthDate: \"), React.createElement(Input, {\n        name: \"birthDate\",\n        id: \"birthDateField\",\n        placeholder: this.state.formControls.birthDate.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.birthDate.value,\n        touched: this.state.formControls.birthDate.touched ? 1 : 0,\n        valid: this.state.formControls.birthDate.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }), this.state.formControls.birthDate.touched && !this.state.formControls.birthDate.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, \" * Not valid format\")), React.createElement(FormGroup, {\n        id: \"gender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"genderField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, \" gender: \"), React.createElement(Input, {\n        name: \"gender\",\n        id: \"genderField\",\n        placeholder: this.state.formControls.gender.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.gender.value,\n        touched: this.state.formControls.gender.touched ? 1 : 0,\n        valid: this.state.formControls.gender.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }), this.state.formControls.gender.touched && !this.state.formControls.gender.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, \" * gender must have at least 3 characters\")), React.createElement(FormGroup, {\n        id: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"addressField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, \" address: \"), React.createElement(Input, {\n        name: \"address\",\n        id: \"addressField\",\n        placeholder: this.state.formControls.address.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.address.value,\n        touched: this.state.formControls.address.touched ? 1 : 0,\n        valid: this.state.formControls.address.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }), this.state.formControls.address.touched && !this.state.formControls.address.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, \" * address must have at least 3 characters\")), React.createElement(FormGroup, {\n        id: \"medicalRecord\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"medicalRecordField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, \" medicalRecord: \"), React.createElement(Input, {\n        name: \"medicalRecord\",\n        id: \"medicalRecordField\",\n        placeholder: this.state.formControls.medicalRecord.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.medicalRecord.value,\n        touched: this.state.formControls.medicalRecord.touched ? 1 : 0,\n        valid: this.state.formControls.medicalRecord.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }), this.state.formControls.medicalRecord.touched && !this.state.formControls.medicalRecord.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, \" * medicalRecord must have at least 3 characters\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '4',\n          offset: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        disabled: !this.state.formIsValid,\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, \"  Update \"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '4',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"delete\",\n        onClick: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, \"  Delete \"))), this.state.showMessage && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, this.state.messsage), React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.toogleMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, \"  OK \")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, \" Caregiever management \")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, this.state.isLoadedCaregiver && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, \"Caregiver : \", this.state.caregiver.username, \" - \", this.state.caregiver.name), !this.state.isLoadedCaregiver && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }, \" Unknown caregiver\"), this.state.errorStatusCaregiver > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatusCaregiver,\n        error: this.state.errorCaregiver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }), this.state.caregiverToSetLoaded && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, \"Caregiver to Set : \", this.state.caregiverToSet.username, \" - \", this.state.caregiverToSet.name), this.state.caregiverToSetLoaded && React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.handleRegisterToSetCaregiver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }, \"  Set this Caregiver \"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '8',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616\n        },\n        __self: this\n      }, this.state.isLoadedTableDataCaregiver && React.createElement(PatientCaregiverTable, {\n        tableData: this.state.tableDataCaregiver,\n        patientSetCaregiver: this.setCaregiver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      }), this.state.errorStatusCaregiverTable > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatusCaregiverTable,\n        error: this.state.errorCaregiverTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        },\n        __self: this\n      }, \" Medication Period management \")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.toggleInsertMedicationPeriod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639\n        },\n        __self: this\n      }, \"  Add medication period \"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '8',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, this.state.isLoadedTableDataCaregiver && React.createElement(MedicationPeriodTable, {\n        tableData: this.state.tableDataMedicationPeriod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }), this.state.errorStatusMedicationPeriodTable > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatusMedicationPeriodTable,\n        error: this.state.errorMedicationPeriodTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }))))), this.state.showMessage && React.createElement(Modal, {\n        isOpen: this.state.showMessage,\n        toggle: this.toogleMessage,\n        className: this.props.className,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toogleMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      }, \" \", this.state.messsage, \" \")), this.state.errorStatus > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatus,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        isOpen: this.state.insertMedicationPeriod,\n        toggle: this.toggleInsertMedicationPeriod,\n        className: this.props.className,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleInsertMedicationPeriod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685\n        },\n        __self: this\n      }, \" Add Medication Period: \"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686\n        },\n        __self: this\n      }, React.createElement(MedicationPeriodForm, {\n        patientId: this.state.patientId,\n        reloadHandler: this.reloadMedicationPeriods,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return PatientPage;\n}(React.Component);\n\nexport default PatientPage;","map":{"version":3,"sources":["D:\\DS\\react-demo\\src\\patient\\patient-page.js"],"names":["React","validate","Button","APIResponseErrorMessage","Col","Row","FormGroup","Input","Label","Redirect","PATIENT_API","CAREGIVER_API","MEDICATION_PERIOD_API","Card","CardHeader","Modal","ModalBody","ModalHeader","PatientCaregiverTable","MedicationPeriodTable","MedicationPeriodForm","PatientPage","props","state","redirect","redirectTo","patientId","match","params","id","patient","caregiver","caregiverToSet","caregiverToSetLoaded","isLoadedCaregiver","isLoaded","tableDataCaregiver","isLoadedTableDataCaregiver","tableDataMedicationPeriod","isLoadedTableDataMedicationPeriod","errorStatus","error","errorStatusCaregiver","errorCaregiver","errorStatusCaregiverTable","errorCaregiverTable","errorStatusMedicationPeriodTable","errorMedicationPeriodTable","insertMedicationPeriod","showMessage","messsage","formIsValid","formControls","name","value","placeholder","valid","touched","validationRules","minLength","isRequired","username","password","birthDate","dateValidator","gender","address","medicalRecord","fetchPatient","bind","handleChange","handleSubmit","registerPatient","toogleMessage","goToPatientHome","afterFetchPatient","handleDelete","deletePatient","fetchCaregiver","fetchTableDataCaregiver","setCaregiver","registerToSetCaregiver","handleRegisterToSetCaregiver","reloadPage","toggleInsertMedicationPeriod","fetchTableDataMediationPeriod","reloadMedicationPeriods","newParams","getPatientById","result","status","err","setState","caregiverId","getCaregiverById","getCaregiver","mediationPeriod","getMedicationPeriodByPatient","formElementName","newState","event","target","updatedControls","updatedFormElement","updatedFormElementName","postUpdatePatient","console","log","JSON","stringify","setCaregiverPatient","size","offset","className","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport validate from \"./validators/patient-validators\";\r\nimport Button from \"react-bootstrap/Button\";\r\n import APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\r\nimport {Col, Row} from \"reactstrap\";\r\nimport { FormGroup, Input, Label} from 'reactstrap';\r\nimport { Redirect } from 'react-router';\r\nimport * as PATIENT_API from \"./api/patient-api\";\r\nimport * as CAREGIVER_API from \"../caregiver/api/caregiver-api\";\r\nimport * as MEDICATION_PERIOD_API from \"../medication-period/api/medication-period-api\";\r\n\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader\r\n} from 'reactstrap';\r\nimport PatientCaregiverTable from './patient-caregiver-table';\r\nimport MedicationPeriodTable from '../medication-period/medication-period-table'\r\nimport MedicationPeriodForm from '../medication-period/medication-period-form'\r\n\r\nclass PatientPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\nredirect : false,\r\nredirectTo : \"/\",\r\npatientId : props.match.params.id,\r\npatient : null,\r\ncaregiver: null,\r\ncaregiverToSet: null,\r\ncaregiverToSetLoaded: false,\r\n\r\nisLoadedCaregiver : false,\r\nisLoaded : false,\r\n\r\n\r\ntableDataCaregiver : [],\r\nisLoadedTableDataCaregiver : false,\r\n\r\n\r\ntableDataMedicationPeriod : [],\r\nisLoadedTableDataMedicationPeriod : false,\r\n\r\nerrorStatus : 0,\r\nerror : \"\",\r\n\r\n\r\nerrorStatusCaregiver: 0,\r\nerrorCaregiver: \"\",\r\n\r\n\r\n\r\nerrorStatusCaregiverTable: 0,\r\nerrorCaregiverTable: \"\",\r\n\r\n\r\nerrorStatusMedicationPeriodTable: 0,\r\nerrorMedicationPeriodTable: \"\",\r\n\r\ninsertMedicationPeriod : false,\r\n\r\nshowMessage : false,\r\nmesssage : \"\",\r\nformIsValid: false,\r\nformControls: {\r\n    \r\n    \r\n    name: {\r\n        value: '',\r\n        placeholder: 'What is the patient\\'s name?',\r\n        valid: false,\r\n        touched: false,\r\n        validationRules: {\r\n            minLength: 3,\r\n            isRequired: false\r\n        }\r\n    },\r\n    username: {\r\n        value: '',\r\n        placeholder: 'What is the patient\\'s Username?',\r\n        valid: false,\r\n        touched: false,\r\n        validationRules: {\r\n            minLength: 3,\r\n            isRequired: true\r\n        }\r\n    },\r\n    password: {\r\n        value: '',\r\n        placeholder: 'What is the patient\\'s Password?',\r\n        valid: false,\r\n        touched: false,\r\n        validationRules: {\r\n            minLength: 3,\r\n            isRequired: false\r\n        }\r\n    },\r\n    birthDate: {\r\n        value: '',\r\n        placeholder: 'What is the patient\\'s Birth Date?...YYYY-MM-DD',\r\n        valid: false,\r\n        touched: false,\r\n        validationRules: {\r\n            minLength: 10,\r\n            isRequired: false,\r\n            dateValidator: true\r\n        }\r\n    },\r\n    gender: {\r\n        value: '',\r\n        placeholder: 'What is the patient\\'s Gender ?',\r\n        valid: false,\r\n        touched: false,\r\n        validationRules: {\r\n            minLength: 3,\r\n            isRequired: false\r\n        }\r\n    },\r\n    address: {\r\n        value: '',\r\n        placeholder: 'What is the patient\\'s Address ?',\r\n        valid: false,\r\n        touched: false,\r\n        validationRules: {\r\n            minLength: 3,\r\n            isRequired: false\r\n        }\r\n    },\r\n    medicalRecord: {\r\n        value: '',\r\n        placeholder: 'What is the patient\\'s Medical Record ?',\r\n        valid: false,\r\n        touched: false,\r\n        validationRules: {\r\n            minLength: 3,\r\n            isRequired: false\r\n        }\r\n    }\r\n\r\n          \r\n     \r\n}\r\n\r\n \r\n        }\r\n            this.fetchPatient = this.fetchPatient.bind(this);\r\nthis.handleChange = this.handleChange.bind(this);\r\nthis.handleSubmit = this.handleSubmit.bind(this);\r\nthis.registerPatient = this.registerPatient.bind(this);\r\nthis.toogleMessage = this.toogleMessage.bind(this);\r\nthis.goToPatientHome = this.goToPatientHome.bind(this);\r\nthis.afterFetchPatient = this.afterFetchPatient.bind(this);\r\nthis.handleDelete = this.handleDelete.bind(this);\r\nthis.deletePatient = this.deletePatient.bind(this);\r\nthis.fetchCaregiver = this.fetchCaregiver.bind(this);\r\nthis.fetchTableDataCaregiver = this.fetchTableDataCaregiver.bind(this);\r\nthis.setCaregiver  = this.setCaregiver.bind(this);\r\nthis.registerToSetCaregiver = this.registerToSetCaregiver.bind(this);\r\nthis.handleRegisterToSetCaregiver = this.handleRegisterToSetCaregiver.bind(this);\r\nthis.reloadPage = this.reloadPage.bind(this);\r\nthis.toggleInsertMedicationPeriod = this.toggleInsertMedicationPeriod.bind(this);\r\n\r\n\r\nthis.fetchTableDataMediationPeriod = this.fetchTableDataMediationPeriod.bind(this);\r\nthis.reloadMedicationPeriods = this.reloadMedicationPeriods.bind(this);\r\n\r\n   }\r\ntoggleInsertMedicationPeriod()\r\n{\r\n    this.state.insertMedicationPeriod = !this.state.insertMedicationPeriod;\r\n}\r\n    fetchPatient() {\r\n        let newParams = {\"id\" :  this.state.patientId};\r\n        return PATIENT_API.getPatientById(newParams,(result, status, err) => {\r\n            if (result !== null && status === 200) {\r\n                  this.state.patient = result;\r\n                 this.state.formControls.name.value = result.name;\r\n                 this.state.formControls.username.value = result.username;\r\n                 this.state.formControls.password.value = result.password;\r\n                 this.state.formControls.birthDate.value = result.birthDate;\r\n                 this.state.formControls.gender.value = result.gender;\r\n                 this.state.formControls.address.value = result.address;\r\n                 this.state.formControls.medicalRecord.value = result.medicalRecord;\r\n                 this.state.isLoaded = true;\r\n\r\n                  this.setState(this.state);\r\n                 this.afterFetchPatient();\r\n             } else {\r\n                  this.state.errorStatus = status;\r\n                 this.state.error = err;\r\n                 this.setState(this.state);\r\n                 \r\n            }\r\n         \r\n        });\r\n    }\r\n    fetchCaregiver() {\r\n        if(this.state.patient.caregiverId != null)\r\n        {\r\n        let newParams = {\"id\" :  this.state.patient.caregiverId};\r\n        return CAREGIVER_API.getCaregiverById(newParams,(result, status, err) => {\r\n            if (result !== null && status === 200) {\r\n                  this.state.caregiver = result;\r\n                  this.state.isLoadedCaregiver = true;\r\n\r\n                  this.setState(this.state);\r\n              } else {\r\n                  this.state.errorStatusCaregiver = status;\r\n                 this.state.errorCaregiver = err;\r\n                 this.setState(this.state);\r\n                 \r\n            }\r\n         \r\n        });\r\n    }\r\n    }\r\n\r\n\r\n    fetchTableDataCaregiver() {\r\n        return CAREGIVER_API.getCaregiver((result, status, err) => {\r\n\r\n            if (result !== null && status === 200) {\r\n                this.state.tableDataCaregiver = result;\r\n               // console.log(\"USer resumt : \" + result);\r\n\r\n                this.state.isLoadedTableDataCaregiver = true;\r\n                this.setState(this.state);\r\n            } else {\r\n                this.state.errorStatusCaregiverTable = status;\r\n                this.state.errorCaregiverTable = err;\r\n                this.setState(this.state);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    fetchTableDataMediationPeriod() {\r\n        let mediationPeriod  =\r\n        {\r\n            patientId : this.state.patientId\r\n        }\r\n        return MEDICATION_PERIOD_API.getMedicationPeriodByPatient(mediationPeriod,(result, status, err) => {\r\n\r\n            if (result !== null && status === 200) {\r\n                this.state.tableDataMedicationPeriod = result;\r\n               // console.log(\"USer resumt : \" + result);\r\n\r\n                this.state.isLoadedTableDataMedicationPeriod = true;\r\n                this.setState(this.state);\r\n            } else {\r\n                this.state.errorMedicationPeriodTable = status;\r\n                this.state.errorStatusMedicationPeriodTable = err;\r\n                this.setState(this.state);\r\n            }\r\n        });\r\n    }\r\n\r\nreloadMedicationPeriods()\r\n{\r\n    this.isLoadedTableDataMedicationPeriod = false;\r\n    this.fetchTableDataMediationPeriod();\r\n}\r\nreloadPage()\r\n{\r\n    this.state.isLoadedTableDataCaregiver = false;\r\n    this.state.isLoadedCaregiver = false;\r\n    this.state.isLoaded = false;\r\n    this.setState(this.state);\r\n    this.fetchPatient();\r\nthis.fetchTableDataCaregiver();\r\n}\r\n\r\ncomponentDidMount()\r\n{ \r\n       this.state.isLoadedTableDataCaregiver = false;\r\n    this.state.isLoadedCaregiver = false;\r\n    this.state.isLoaded = false;\r\n    this.setState(this.state);\r\n    this.fetchPatient();\r\nthis.fetchTableDataCaregiver();\r\nthis.fetchTableDataMediationPeriod();\r\n   \r\n\r\n\r\n}\r\n\r\nafterFetchPatient()\r\n{\r\n    let formIsValid = true;\r\n    for (let formElementName in this.state.formControls) {\r\n        this.state.formControls[formElementName].valid = validate(this.state.formControls[formElementName].value, this.state.formControls[formElementName].validationRules);\r\n    \r\n \r\n        this.setState(this.state);\r\n        formIsValid = this.state.formControls[formElementName].valid && formIsValid;\r\n    }\r\n\r\n     let newState = this.state;\r\n newState.formIsValid = formIsValid;\r\nthis.setState(newState);\r\nthis.fetchCaregiver();\r\n}\r\n\r\n\r\n \r\n\r\n\r\nhandleChange (event) {\r\n\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    const updatedControls = this.state.formControls;\r\n\r\n    const updatedFormElement = updatedControls[name];\r\n\r\n    updatedFormElement.value = value;\r\n    updatedFormElement.touched = true;\r\n    updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\r\n    updatedControls[name] = updatedFormElement;\r\n \r\n    let formIsValid = true;\r\n    for (let updatedFormElementName in updatedControls) {\r\n        formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\r\n    }\r\n\r\n   \r\n    let newState = this.state;\r\nnewState.formControls = updatedControls;\r\nnewState.formIsValid = formIsValid;\r\nthis.setState(newState);\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nregisterPatient(patient) {\r\n    return PATIENT_API.postUpdatePatient(patient, (result, status, error) => {\r\n        if (result !== null && (status === 200 || status === 201)) {\r\n            console.log(\"Successfully updated patient with id: \" + result);\r\n             \r\n            this.state.messsage =\"Successfully updated patient with id: \" + result;\r\n            this.state.showMessage = true;\r\n            this.setState(this.state);\r\n\r\n         } else {\r\n            let newState = this.state;\r\n            newState.errorStatus = status;\r\n            newState.error = error;\r\n            this.setState(newState);\r\n        }\r\n    });\r\n}\r\n\r\ndeletePatient(patientId) {\r\n    return PATIENT_API.deletePatient(patientId, (result, status, error) => {\r\n        if (result !== null && (status === 200 || status === 201)) {\r\n            console.log(\"Successfully deleted patient with id: \" + result);\r\n             \r\n            this.state.messsage =\"Successfully deleted patient with id: \" + result;\r\n            this.state.showMessage = true;\r\n            this.setState(this.state);\r\n\r\n         } else {\r\n            let newState = this.state;\r\n            newState.errorStatus = status;\r\n            newState.error = error;\r\n            this.setState(newState);\r\n        }\r\n    });\r\n}\r\ntoogleMessage()\r\n{\r\n    this.state.showMessage = false;\r\n    this.setState(this.state);\r\n}\r\ngoToPatientHome()\r\n{\r\n    this.state.redirectTo = \"/doctorHome\";\r\n    this.state.redirect = true;\r\n    this.setState(this.state);\r\n}\r\nhandleSubmit() {\r\n    let patient = {\r\n        id : this.state.patientId,\r\n        name: this.state.formControls.name.value,\r\n        username: this.state.formControls.username.value,\r\n        password: this.state.formControls.password.value,\r\n        birthDate: this.state.formControls.birthDate.value,\r\n        gender: this.state.formControls.gender.value,\r\n        address: this.state.formControls.address.value,\r\n        medicalRecord : this.state.formControls.medicalRecord.value\r\n\r\n     };\r\n\r\n    console.log(patient);\r\n    this.registerPatient(patient);\r\n}\r\n\r\nhandleDelete() {\r\n    let patientId = this.state.patientId;\r\n\r\n     this.deletePatient(patientId);\r\n    \r\n}\r\n\r\n\r\n\r\nsetCaregiver(caregiver)\r\n{\r\n    console.log(JSON.stringify(caregiver));\r\n    this.state.caregiverToSet = caregiver;\r\n    this.state.caregiverToSetLoaded = true;\r\n    this.setState(this.state);\r\n}\r\nregisterToSetCaregiver(patient) {\r\n    console.log(JSON.stringify(patient));\r\n     return PATIENT_API.setCaregiverPatient(patient, (result, status, error) => {\r\n        if (result !== null && (status === 200 || status === 201)) {\r\n            console.log(\"Successfully setted caregiver  \" + result);\r\n             \r\n            this.state.messsage =\"Successfully setted caregiver  \" + result;\r\n            this.state.showMessage = true;\r\n            this.setState(this.state);\r\n\r\n         } else {\r\n            let newState = this.state;\r\n            newState.errorStatus = status;\r\n            newState.error = error;\r\n            this.setState(newState);\r\n        }\r\n    });\r\n}\r\n\r\nhandleRegisterToSetCaregiver()\r\n{\r\n \r\n    let patient = \r\n    {\r\n        id: this.state.patient.id,\r\n        caregiverId : this.state.caregiverToSet.id\r\n    }\r\n    this.registerToSetCaregiver (patient);\r\n    this.state.caregiverToSetLoaded = null;\r\n    this.state.caregiverToSet = null;\r\n    this.setState(this.state);\r\n    this.reloadPage();\r\n\r\n}\r\n\r\n    render() {\r\n        console.log(\"REDER);\");\r\n        console.log(this.state.isLoaded);\r\n        console.log(this.state.redirect);\r\n\r\n        return (\r\n            <div>\r\n\r\n                \r\n                 {this.state.redirect === false &&    <p> {this.state.patientId}</p>}\r\n                { this.state.redirect === false && this.state.isLoaded === true  &&  <div><p> {JSON.stringify(this.state.patient)}</p> <Button color=\"primary\"> {this.state.patientId}</Button></div> }\r\n                 {this.state.redirect === true && <Redirect to = {this.state.redirectTo}/>}\r\n\r\n                 <Button type={\"submit\"}   onClick={this.goToPatientHome}>  Go to Doctor Home Page </Button>\r\n\r\n\r\n                 {this.state.errorStatus > 0 && <APIResponseErrorMessage\r\n                                                            errorStatus={this.state.errorStatus}\r\n                                                            error={this.state.error} />}\r\n                 \r\n\r\n\r\n\r\n                 <FormGroup id='name'>\r\n                    <Label for='nameField'> Name: </Label>\r\n                    <Input name='name' id='nameField' placeholder={this.state.formControls.name.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.name.value}\r\n                           touched={this.state.formControls.name.touched? 1 : 0}\r\n                           valid={this.state.formControls.name.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.name.touched && !this.state.formControls.name.valid &&\r\n                    <div className={\"error-message row\"}> * Name must have at least 3 characters </div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='username'>\r\n                    <Label for='usernameField'> Username: </Label>\r\n                    <Input name='username' id='usernameField' placeholder={this.state.formControls.username.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.username.value}\r\n                           touched={this.state.formControls.username.touched? 1 : 0}\r\n                           valid={this.state.formControls.username.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.username.touched && !this.state.formControls.username.valid &&\r\n                    <div className={\"error-message\"}> * Username must have at least 3 characters</div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='password'>\r\n                    <Label for='passwordField'> Password: </Label>\r\n                    <Input name='password' id='passwordField' placeholder={this.state.formControls.password.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.password.value}\r\n                           touched={this.state.formControls.password.touched? 1 : 0}\r\n                           valid={this.state.formControls.password.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.password.touched && !this.state.formControls.password.valid &&\r\n                    <div className={\"error-message\"}> * Password must have at least 3 characters</div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='birthDate'>\r\n                    <Label for='birthDateField'> birthDate: </Label>\r\n                    <Input name='birthDate' id='birthDateField' placeholder={this.state.formControls.birthDate.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.birthDate.value}\r\n                           touched={this.state.formControls.birthDate.touched? 1 : 0}\r\n                           valid={this.state.formControls.birthDate.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.birthDate.touched && !this.state.formControls.birthDate.valid &&\r\n                    <div className={\"error-message\"}> * Not valid format</div>}\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup id='gender'>\r\n                    <Label for='genderField'> gender: </Label>\r\n                    <Input name='gender' id='genderField' placeholder={this.state.formControls.gender.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.gender.value}\r\n                           touched={this.state.formControls.gender.touched? 1 : 0}\r\n                           valid={this.state.formControls.gender.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.gender.touched && !this.state.formControls.gender.valid &&\r\n                    <div className={\"error-message\"}> * gender must have at least 3 characters</div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='address'>\r\n                    <Label for='addressField'> address: </Label>\r\n                    <Input name='address' id='addressField' placeholder={this.state.formControls.address.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.address.value}\r\n                           touched={this.state.formControls.address.touched? 1 : 0}\r\n                           valid={this.state.formControls.address.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.address.touched && !this.state.formControls.address.valid &&\r\n                    <div className={\"error-message\"}> * address must have at least 3 characters</div>}\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup id='medicalRecord'>\r\n                    <Label for='medicalRecordField'> medicalRecord: </Label>\r\n                    <Input name='medicalRecord' id='medicalRecordField' placeholder={this.state.formControls.medicalRecord.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.medicalRecord.value}\r\n                           touched={this.state.formControls.medicalRecord.touched? 1 : 0}\r\n                           valid={this.state.formControls.medicalRecord.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.medicalRecord.touched && !this.state.formControls.medicalRecord.valid &&\r\n                    <div className={\"error-message\"}> * medicalRecord must have at least 3 characters</div>}\r\n                </FormGroup>\r\n\r\n\r\n\r\n\r\n                <Row>\r\n                        <Col sm={{size: '4', offset: 8}}>\r\n                            <Button type={\"submit\"} disabled={!this.state.formIsValid} onClick={this.handleSubmit}>  Update </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm={{size: '4', offset: 1}}>\r\n                            <Button type={\"delete\"}  onClick={this.handleDelete}>  Delete </Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    \r\n               {this.state.showMessage && \r\n                     <div>\r\n                            <p>{this.state.messsage}</p>\r\n                            <Button type={\"submit\"}   onClick={this.toogleMessage}>  OK </Button>\r\n                            </div>\r\n                        \r\n                    \r\n    }\r\n\r\n\r\n                  {  <div><CardHeader>\r\n                    <strong> Caregiever management </strong>\r\n                </CardHeader>\r\n                <Card>\r\n                     { this.state.isLoadedCaregiver && <p>Caregiver : {this.state.caregiver.username} - {this.state.caregiver.name}</p>}\r\n                     { !this.state.isLoadedCaregiver && <p> Unknown caregiver</p>}\r\n                     {this.state.errorStatusCaregiver > 0 && <APIResponseErrorMessage\r\n                                                            errorStatus={this.state.errorStatusCaregiver}\r\n                                                            error={this.state.errorCaregiver}\r\n                                                        />   }\r\n\r\n                      { this.state.caregiverToSetLoaded && <p>Caregiver to Set : {this.state.caregiverToSet.username} - {this.state.caregiverToSet.name}</p>}\r\n                      { this.state.caregiverToSetLoaded &&  <Button type={\"submit\"}   onClick={this.handleRegisterToSetCaregiver}>  Set this Caregiver </Button>}\r\n\r\n\r\n\r\n                     <Row>\r\n                        <Col sm={{size: '8', offset: 1}}>\r\n                            {this.state.isLoadedTableDataCaregiver && <PatientCaregiverTable tableData = {this.state.tableDataCaregiver} patientSetCaregiver = {this.setCaregiver}/>}\r\n                            {this.state.errorStatusCaregiverTable > 0 && <APIResponseErrorMessage\r\n                                                            errorStatus={this.state.errorStatusCaregiverTable}\r\n                                                            error={this.state.errorCaregiverTable}\r\n                                                        />   }\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n\r\n\r\n                </Card> \r\n                </div>\r\n                }\r\n\r\n\r\n{  <div><CardHeader>\r\n                    <strong> Medication Period management </strong>\r\n                </CardHeader>\r\n                <Card>\r\n                     \r\n\r\n                    <Button type={\"submit\"}   onClick={this.toggleInsertMedicationPeriod}>  Add medication period </Button>\r\n\r\n\r\n\r\n                     <Row>\r\n                        <Col sm={{size: '8', offset: 1}}>\r\n                            {this.state.isLoadedTableDataCaregiver && <MedicationPeriodTable tableData = {this.state.tableDataMedicationPeriod}  />}\r\n                            {this.state.errorStatusMedicationPeriodTable > 0 && <APIResponseErrorMessage\r\n                                                            errorStatus={this.state.errorStatusMedicationPeriodTable}\r\n                                                            error={this.state.errorMedicationPeriodTable}\r\n                                                        />   }\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n\r\n\r\n                </Card> \r\n                </div>\r\n                }\r\n\r\n\r\n\r\n\r\n                            \r\n\r\n\r\n    {this.state.showMessage && \r\n\r\n<Modal isOpen={this.state.showMessage} toggle={this.toogleMessage}\r\nclassName={this.props.className} size=\"lg\">\r\n<ModalHeader toggle={this.toogleMessage}> {this.state.messsage} </ModalHeader>\r\n \r\n</Modal>\r\n    }\r\n\r\n                    {\r\n                    this.state.errorStatus > 0 &&\r\n                    <APIResponseErrorMessage errorStatus={this.state.errorStatus} error={this.state.error}/>\r\n                }\r\n\r\n\r\n            \r\n                    \r\n                <Modal isOpen={this.state.insertMedicationPeriod} toggle={this.toggleInsertMedicationPeriod}\r\n                       className={this.props.className} size=\"lg\">\r\n                    <ModalHeader toggle={this.toggleInsertMedicationPeriod}> Add Medication Period: </ModalHeader>\r\n                    <ModalBody>\r\n                        <MedicationPeriodForm patientId = {this.state.patientId} reloadHandler={this.reloadMedicationPeriods}/>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n\r\n\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nexport default PatientPage;\r\n"]},"metadata":{},"sourceType":"module"}