{"ast":null,"code":"import _classCallCheck from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\DS\\\\react-demo\\\\src\\\\doctor\\\\doctor-home.js\";\nimport React from 'react';\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport { Button, Card, CardHeader, Col, Modal, ModalBody, ModalHeader, Row } from 'reactstrap'; //import * as DOCTOR_API from \"./api/doctor-api\"\n//import * as PATIENT_API from \"./api/patient-api\"\n//import * as CAREGIVER_API from \"./api/caregiver-api\"\n\nimport * as USER_API from \"../userapi/user-api\";\nimport * as MEDICATION_API from \"../medication/api/medication-api\";\nimport UserTable from './user-table';\nimport DoctorForm from './doctor-form';\nimport CaregiverForm from '../caregiver/caregiver-form';\nimport PatientForm from '../patient/pacient-form';\nimport MedicationTable from '../medication/medication-table';\nimport MedicationForm from '../medication/medication-form';\n\nvar DoctorHome =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DoctorHome, _React$Component);\n\n  function DoctorHome(props) {\n    var _this;\n\n    _classCallCheck(this, DoctorHome);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DoctorHome).call(this));\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DoctorHome).call(this, props));\n    _this.state = {\n      insertDoctor: false,\n      insertPatient: false,\n      insertCaregiver: false,\n      insertMedication: false,\n      collapseForm: false,\n      tableData: [],\n      tableDataMedication: [],\n      isLoaded: false,\n      isLoadedMedication: false,\n      errorStatus: 0,\n      error: null,\n      errorStatusMedication: 0,\n      errorMedication: null\n    };\n    _this.toggleInsertDoctorForm = _this.toggleInsertDoctorForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleInsertCaregiverForm = _this.toggleInsertCaregiverForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleInsertPatientForm = _this.toggleInsertPatientForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleInsertMedicationForm = _this.toggleInsertMedicationForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reloadDoctor = _this.reloadDoctor.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reloadCaregiver = _this.reloadCaregiver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reloadPatient = _this.reloadPatient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reloadMedication = _this.reloadMedication.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchUsers = _this.fetchUsers.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchMedication = _this.fetchMedication.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DoctorHome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchUsers();\n      this.fetchMedication();\n    }\n  }, {\n    key: \"fetchUsers\",\n    value: function fetchUsers() {\n      var _this2 = this;\n\n      return USER_API.getUsers(function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this2.state.tableData = result; // console.log(\"USer resumt : \" + result);\n\n          _this2.state.isLoaded = true;\n\n          _this2.setState(_this2.state);\n        } else {\n          _this2.state.errorStatus = status;\n          _this2.state.error = err;\n\n          _this2.setState(_this2.state);\n        }\n      });\n    }\n  }, {\n    key: \"fetchMedication\",\n    value: function fetchMedication() {\n      var _this3 = this;\n\n      return MEDICATION_API.getMedication(function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this3.state.tableDataMedication = result;\n          _this3.state.isLoadedMedication = true;\n\n          _this3.setState(_this3.state); // console.log(\"MEdication:: \" + result);\n          // console.log(\"Medication resumt : \" + JSON.stringify(result)); zicea ceva a nu vedea ca primea object si nii in console nu il afica ca obiect numai [Object object]\n\n        } else {\n          _this3.state.errorStatusMedication = status;\n          _this3.state.errorMedication = err;\n\n          _this3.setState(_this3.state);\n        }\n      });\n    }\n  }, {\n    key: \"toggleInsertDoctorForm\",\n    value: function toggleInsertDoctorForm() {\n      this.state.insertDoctor = !this.state.insertDoctor;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"toggleInsertMedicationForm\",\n    value: function toggleInsertMedicationForm() {\n      this.state.insertMedication = !this.state.insertMedication;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"toggleInsertCaregiverForm\",\n    value: function toggleInsertCaregiverForm() {\n      this.state.insertCaregiver = !this.state.insertCaregiver;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"toggleInsertPatientForm\",\n    value: function toggleInsertPatientForm() {\n      this.state.insertPatient = !this.state.insertPatient;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"reloadDoctor\",\n    value: function reloadDoctor() {\n      this.state.isLoaded = false;\n      this.setState(this.state);\n      this.toggleInsertDoctorForm();\n      this.fetchUsers();\n    }\n  }, {\n    key: \"reloadCaregiver\",\n    value: function reloadCaregiver() {\n      this.state.isLoaded = false;\n      this.setState(this.state);\n      this.toggleInsertCaregiverForm();\n      this.fetchUsers();\n    }\n  }, {\n    key: \"reloadPatient\",\n    value: function reloadPatient() {\n      this.state.isLoaded = false;\n      this.setState(this.state);\n      this.toggleInsertPatientForm();\n      this.fetchUsers();\n    }\n  }, {\n    key: \"reloadMedication\",\n    value: function reloadMedication() {\n      this.state.isLoadedMedication = false;\n      this.setState(this.state);\n      this.toggleInsertMedicationForm();\n      this.fetchMedication();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \" Users Management \")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '8',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggleInsertDoctorForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"  Add doctor \"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggleInsertPatientForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"  Add patient \"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggleInsertCaregiverForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"  Add caregiver \"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '8',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, this.state.isLoaded && React.createElement(UserTable, {\n        tableData: this.state.tableData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), this.state.errorStatus > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatus,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })))), React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \" Medication Management \")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '8',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggleInsertMedicationForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"  Add medication \"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '8',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, this.state.isLoadedMedication && React.createElement(MedicationTable, {\n        tableData: this.state.tableDataMedication,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), this.state.errorStatusMedication > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatusMedication,\n        error: this.state.errorMedication,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })))), React.createElement(Modal, {\n        isOpen: this.state.insertDoctor,\n        toggle: this.toggleInsertDoctorForm,\n        className: this.props.className,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleInsertDoctorForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \" Add Doctor: \"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(DoctorForm, {\n        reloadHandler: this.reloadDoctor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }))), React.createElement(Modal, {\n        isOpen: this.state.insertCaregiver,\n        toggle: this.toggleInsertCaregiverForm,\n        className: this.props.className,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleInsertCaregiverForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \" Add Caregiver: \"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(CaregiverForm, {\n        reloadHandler: this.reloadCaregiver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }))), React.createElement(Modal, {\n        isOpen: this.state.insertPatient,\n        toggle: this.toggleInsertPatientForm,\n        className: this.props.className,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleInsertPatientForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \" Add Pacient: \"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(PatientForm, {\n        reloadHandler: this.reloadPatient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }))), React.createElement(Modal, {\n        isOpen: this.state.insertMedication,\n        toggle: this.toggleInsertMedicationForm,\n        className: this.props.className,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleInsertMedicationForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \" Add Medication: \"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(MedicationForm, {\n        reloadHandler: this.reloadMedication,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DoctorHome;\n}(React.Component);\n\nexport default DoctorHome;","map":{"version":3,"sources":["D:\\DS\\react-demo\\src\\doctor\\doctor-home.js"],"names":["React","APIResponseErrorMessage","Button","Card","CardHeader","Col","Modal","ModalBody","ModalHeader","Row","USER_API","MEDICATION_API","UserTable","DoctorForm","CaregiverForm","PatientForm","MedicationTable","MedicationForm","DoctorHome","props","state","insertDoctor","insertPatient","insertCaregiver","insertMedication","collapseForm","tableData","tableDataMedication","isLoaded","isLoadedMedication","errorStatus","error","errorStatusMedication","errorMedication","toggleInsertDoctorForm","bind","toggleInsertCaregiverForm","toggleInsertPatientForm","toggleInsertMedicationForm","reloadDoctor","reloadCaregiver","reloadPatient","reloadMedication","fetchUsers","fetchMedication","getUsers","result","status","err","setState","getMedication","size","offset","className","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    Col,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Row\r\n} from 'reactstrap';\r\n \r\n//import * as DOCTOR_API from \"./api/doctor-api\"\r\n//import * as PATIENT_API from \"./api/patient-api\"\r\n//import * as CAREGIVER_API from \"./api/caregiver-api\"\r\nimport * as USER_API from \"../userapi/user-api\"\r\nimport * as MEDICATION_API from \"../medication/api/medication-api\"\r\n\r\nimport UserTable from './user-table'\r\nimport DoctorForm from './doctor-form'\r\nimport CaregiverForm from '../caregiver/caregiver-form'\r\nimport PatientForm from '../patient/pacient-form'\r\n\r\nimport MedicationTable from '../medication/medication-table'\r\nimport MedicationForm from '../medication/medication-form'\r\n\r\n\r\n\r\nclass DoctorHome extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        super(props);\r\n      \r\n        this.state = {\r\n            insertDoctor: false,\r\n            insertPatient: false,\r\n            insertCaregiver: false,\r\n            insertMedication: false,\r\n\r\n            collapseForm: false,\r\n            tableData: [],\r\n            tableDataMedication : [],\r\n            isLoaded: false,\r\n            isLoadedMedication: false,\r\n\r\n            errorStatus: 0,\r\n            error: null,\r\n            \r\n            errorStatusMedication: 0,\r\n            errorMedication: null,\r\n             \r\n        };\r\n\r\n        this.toggleInsertDoctorForm = this.toggleInsertDoctorForm.bind(this);\r\n        this.toggleInsertCaregiverForm = this.toggleInsertCaregiverForm.bind(this);\r\n        this.toggleInsertPatientForm = this.toggleInsertPatientForm.bind(this);\r\n        this.toggleInsertMedicationForm = this.toggleInsertMedicationForm.bind(this);\r\n\r\n\r\n\r\n        this.reloadDoctor = this.reloadDoctor.bind(this);\r\n        this.reloadCaregiver = this.reloadCaregiver.bind(this);\r\n        this.reloadPatient = this.reloadPatient.bind(this);\r\n        this.reloadMedication = this.reloadMedication.bind(this);\r\n\r\n\r\n        this.fetchUsers = this.fetchUsers.bind(this);\r\n        this.fetchMedication = this.fetchMedication.bind(this);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchUsers();\r\n        this.fetchMedication();\r\n    }\r\n\r\n    fetchUsers() {\r\n        return USER_API.getUsers((result, status, err) => {\r\n\r\n            if (result !== null && status === 200) {\r\n                this.state.tableData = result;\r\n               // console.log(\"USer resumt : \" + result);\r\n\r\n                this.state.isLoaded = true;\r\n                this.setState(this.state);\r\n            } else {\r\n                this.state.errorStatus = status;\r\n                this.state.error = err;\r\n                this.setState(this.state);\r\n            }\r\n        });\r\n    }\r\n    fetchMedication() {\r\n        return MEDICATION_API.getMedication((result, status, err) => {\r\n\r\n            if (result !== null && status === 200) {\r\n                this.state.tableDataMedication = result;\r\n                this.state.isLoadedMedication = true;\r\n                this.setState(this.state);\r\n               // console.log(\"MEdication:: \" + result);\r\n              // console.log(\"Medication resumt : \" + JSON.stringify(result)); zicea ceva a nu vedea ca primea object si nii in console nu il afica ca obiect numai [Object object]\r\n            } else {\r\n                this.state.errorStatusMedication = status;\r\n                this.state.errorMedication = err;\r\n                this.setState(this.state);\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleInsertDoctorForm() {\r\n         this.state.insertDoctor = !this.state.insertDoctor;\r\n        this.setState(this.state);\r\n    }\r\n    toggleInsertMedicationForm() {\r\n        this.state.insertMedication = !this.state.insertMedication;\r\n       this.setState(this.state);\r\n   }\r\n   toggleInsertCaregiverForm() {\r\n    this.state.insertCaregiver = !this.state.insertCaregiver;\r\n   this.setState(this.state);\r\n}\r\ntoggleInsertPatientForm() {\r\n    this.state.insertPatient = !this.state.insertPatient;\r\n   this.setState(this.state);\r\n}\r\n\r\n\r\n    reloadDoctor() {\r\n        this.state.isLoaded = false;\r\n        this.setState(this.state);\r\n        this.toggleInsertDoctorForm();\r\n        this.fetchUsers();\r\n    }\r\n    reloadCaregiver() {\r\n        this.state.isLoaded = false;\r\n        this.setState(this.state);\r\n        this.toggleInsertCaregiverForm();\r\n        this.fetchUsers();\r\n    }\r\n    reloadPatient() {\r\n        this.state.isLoaded = false;\r\n        this.setState(this.state);\r\n        this.toggleInsertPatientForm();\r\n        this.fetchUsers();\r\n    }\r\n    reloadMedication() {\r\n        this.state.isLoadedMedication = false;\r\n        this.setState(this.state);\r\n        this.toggleInsertMedicationForm();\r\n        this.fetchMedication();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CardHeader>\r\n                    <strong> Users Management </strong>\r\n                </CardHeader>\r\n                <Card>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col sm={{size: '8', offset: 1}}>\r\n                        <Button color = \"primary\"  onClick={this.toggleInsertDoctorForm}>  Add doctor </Button>\r\n                        <Button color = \"primary\"   onClick={this.toggleInsertPatientForm}>  Add patient </Button>\r\n                        <Button color = \"primary\"   onClick={this.toggleInsertCaregiverForm}>  Add caregiver </Button>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col sm={{size: '8', offset: 1}}>\r\n                            {this.state.isLoaded && <UserTable tableData = {this.state.tableData}/>}\r\n                            {this.state.errorStatus > 0 && <APIResponseErrorMessage\r\n                                                            errorStatus={this.state.errorStatus}\r\n                                                            error={this.state.error}\r\n                                                        />   }\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n\r\n\r\n\r\n                <CardHeader>\r\n                    <strong> Medication Management </strong>\r\n                </CardHeader>\r\n                <Card>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col sm={{size: '8', offset: 1}}>\r\n                        <Button color = \"primary\"  onClick={this.toggleInsertMedicationForm}>  Add medication </Button>\r\n              \r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col sm={{size: '8', offset: 1}}>\r\n                            {this.state.isLoadedMedication && <MedicationTable tableData = {this.state.tableDataMedication}/>}\r\n                            {this.state.errorStatusMedication > 0 && <APIResponseErrorMessage\r\n                                                            errorStatus={this.state.errorStatusMedication}\r\n                                                            error={this.state.errorMedication}\r\n                                                        />   }\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n\r\n\r\n\r\n\r\n                <Modal isOpen={this.state.insertDoctor} toggle={this.toggleInsertDoctorForm}\r\n                       className={this.props.className} size=\"lg\">\r\n                    <ModalHeader toggle={this.toggleInsertDoctorForm}> Add Doctor: </ModalHeader>\r\n                    <ModalBody>\r\n                        <DoctorForm reloadHandler={this.reloadDoctor}/>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n                <Modal isOpen={this.state.insertCaregiver} toggle={this.toggleInsertCaregiverForm}\r\n                       className={this.props.className} size=\"lg\">\r\n                    <ModalHeader toggle={this.toggleInsertCaregiverForm}> Add Caregiver: </ModalHeader>\r\n                    <ModalBody>\r\n                        <CaregiverForm reloadHandler={this.reloadCaregiver}/>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <Modal isOpen={this.state.insertPatient} toggle={this.toggleInsertPatientForm}\r\n                       className={this.props.className} size=\"lg\">\r\n                    <ModalHeader toggle={this.toggleInsertPatientForm}> Add Pacient: </ModalHeader>\r\n                    <ModalBody>\r\n                        <PatientForm reloadHandler={this.reloadPatient}/>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n                <Modal isOpen={this.state.insertMedication} toggle={this.toggleInsertMedicationForm}\r\n                       className={this.props.className} size=\"lg\">\r\n                    <ModalHeader toggle={this.toggleInsertMedicationForm}> Add Medication: </ModalHeader>\r\n                    <ModalBody>\r\n                        <MedicationForm reloadHandler={this.reloadMedication}/>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default DoctorHome;\r\n"]},"metadata":{},"sourceType":"module"}