{"ast":null,"code":"import _classCallCheck from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\DS\\\\react-demo\\\\src\\\\person\\\\components\\\\person-page.js\";\nimport React from 'react';\nimport validate from \"./validators/person-validators\";\nimport Button from \"react-bootstrap/Button\";\nimport * as API_USERS from \"../api/person-api\";\nimport APIResponseErrorMessage from \"../../commons/errorhandling/api-response-error-message\";\nimport { Col, Row } from \"reactstrap\";\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport { Redirect } from 'react-router';\nimport * as API_USER from \"../api/person.api\";\n\nvar PersonPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PersonPage, _React$Component);\n\n  function PersonPage(props) {\n    var _this;\n\n    _classCallCheck(this, PersonPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PersonPage).call(this, props));\n    _this.state = {\n      redirect: false,\n      redirectTo: \"/\",\n      personId: props.match.params.id,\n      person: null,\n      isLoaded: false,\n      errorStatus: 0,\n      error: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(PersonPage, [{\n    key: \"fetchPersons\",\n    value: function fetchPersons() {\n      var _this2 = this;\n\n      var newParams = {\n        \"id\": this.state.personId\n      };\n      return API_USERS.getPersonById(newParams, function (result, status, err) {\n        if (result !== null && status === 200) {\n          var _newState = _this2.state;\n          _newState.person = result;\n          _newState.isLoaded = true;\n        } else {\n          var _newState2 = _this2.state;\n          _newState2.errorStatus = errorStatus;\n          _newState2.error = error;\n        }\n\n        _this2.setState(newState);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetcchPerson();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.state.redirect === false && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \" \", this.state.persionId), this.state.redirect === false && this.isLoaded === true && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" \", this.state.person.name), this.state.redirect === true && React.createElement(Redirect, {\n        to: this.state.redirectTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PersonPage;\n}(React.Component);\n\nexport default PersonForm;","map":{"version":3,"sources":["D:\\DS\\react-demo\\src\\person\\components\\person-page.js"],"names":["React","validate","Button","API_USERS","APIResponseErrorMessage","Col","Row","FormGroup","Input","Label","Redirect","API_USER","PersonPage","props","state","redirect","redirectTo","personId","match","params","id","person","isLoaded","errorStatus","error","newParams","getPersonById","result","status","err","newState","setState","fetcchPerson","persionId","name","Component","PersonForm"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,KAAKC,SAAZ,MAA2B,mBAA3B;AACA,OAAOC,uBAAP,MAAoC,wDAApC;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,YAAvB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,KAA3B,QAAuC,YAAvC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAO,KAAKC,QAAZ,MAA0B,mBAA1B;;IAEMC,U;;;;;AAEF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACrBC,MAAAA,QAAQ,EAAG,KADU;AAErBC,MAAAA,UAAU,EAAG,GAFQ;AAGrBC,MAAAA,QAAQ,EAAGJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,EAHT;AAIrBC,MAAAA,MAAM,EAAG,IAJY;AAKrBC,MAAAA,QAAQ,EAAG,KALU;AAMrBC,MAAAA,WAAW,EAAG,CANO;AAOrBC,MAAAA,KAAK,EAAG;AAPa,KAAb;AAHe;AAelB;;;;mCAEc;AAAA;;AACX,UAAIC,SAAS,GAAG;AAAC,cAAQ,KAAKX,KAAL,CAAWG;AAApB,OAAhB;AACA,aAAOd,SAAS,CAACuB,aAAV,CAAwBD,SAAxB,EAAkC,UAACE,MAAD,EAASC,MAAT,EAAiBC,GAAjB,EAAyB;AAE9D,YAAIF,MAAM,KAAK,IAAX,IAAmBC,MAAM,KAAK,GAAlC,EAAuC;AAClC,cAAIE,SAAQ,GAAG,MAAI,CAAChB,KAApB;AACAgB,UAAAA,SAAQ,CAACT,MAAT,GAAkBM,MAAlB;AACAG,UAAAA,SAAQ,CAACR,QAAT,GAAoB,IAApB;AACJ,SAJD,MAIO;AACH,cAAIQ,UAAQ,GAAG,MAAI,CAAChB,KAApB;AACCgB,UAAAA,UAAQ,CAACP,WAAT,GAAuBA,WAAvB;AACAO,UAAAA,UAAQ,CAACN,KAAT,GAAiBA,KAAjB;AAEJ;;AACD,QAAA,MAAI,CAACO,QAAL,CAAcD,QAAd;AACH,OAbM,CAAP;AAcH;;;wCAEL;AACI,WAAKE,YAAL;AACH;;;6BACY;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGM,KAAKlB,KAAL,CAAWC,QAAX,KAAwB,KAAxB,IAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAK,KAAKD,KAAL,CAAWmB,SAAhB,CAH1C,EAIM,KAAKnB,KAAL,CAAWC,QAAX,KAAwB,KAAxB,IAAiC,KAAKO,QAAL,KAAkB,IAAnD,IAA8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAK,KAAKR,KAAL,CAAWO,MAAX,CAAkBa,IAAvB,CAJpE,EAKM,KAAKpB,KAAL,CAAWC,QAAX,KAAwB,IAAxB,IAAgC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAI,KAAKD,KAAL,CAAWE,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALtC,CADJ;AAWH;;;;EApDoBhB,KAAK,CAACmC,S;;AAuD/B,eAAeC,UAAf","sourcesContent":["import React from 'react';\r\nimport validate from \"./validators/person-validators\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as API_USERS from \"../api/person-api\";\r\nimport APIResponseErrorMessage from \"../../commons/errorhandling/api-response-error-message\";\r\nimport {Col, Row} from \"reactstrap\";\r\nimport { FormGroup, Input, Label} from 'reactstrap';\r\nimport { Redirect } from 'react-router';\r\nimport * as API_USER from \"../api/person.api\"\r\n\r\nclass PersonPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\nredirect : false,\r\nredirectTo : \"/\",\r\npersonId : props.match.params.id,\r\nperson : null,\r\nisLoaded : false,\r\nerrorStatus : 0,\r\nerror : \"\"\r\n\r\n \r\n        }\r\n            \r\n    }\r\n\r\n    fetchPersons() {\r\n        let newParams = {\"id\" :  this.state.personId};\r\n        return API_USERS.getPersonById(newParams,(result, status, err) => {\r\n\r\n            if (result !== null && status === 200) {\r\n                 let newState = this.state;\r\n                 newState.person = result;\r\n                 newState.isLoaded = true;\r\n            } else {\r\n                let newState = this.state;\r\n                 newState.errorStatus = errorStatus;\r\n                 newState.error = error;\r\n                 \r\n            }\r\n            this.setState(newState);\r\n        });\r\n    }\r\ncomponentDidMount()\r\n{\r\n    this.fetcchPerson();\r\n}\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                \r\n                 {this.state.redirect === false &&    <p> {this.state.persionId}</p>}\r\n                 {this.state.redirect === false && this.isLoaded === true &&    <p> {this.state.person.name}</p>}\r\n                 {this.state.redirect === true && <Redirect to = {this.state.redirectTo}/>}\r\n                 \r\n                    \r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nexport default PersonForm;\r\n"]},"metadata":{},"sourceType":"module"}