{"ast":null,"code":"import _classCallCheck from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\DS\\\\react-demo\\\\src\\\\medication-period\\\\medication-period-page.js\";\nimport React from 'react';\nimport validate from \"./validators/medication-period-validators\";\nimport Button from \"react-bootstrap/Button\";\nimport * as MEDICATION_PERIOD_API from \"./api/medication-period-api\";\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport { Col, Row } from \"reactstrap\";\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport * as MEDICATION_API from \"../medication/api/medication-api\";\nimport MedicationPeriodMedicationTable from './medication-period-medication-table';\nimport { Card, CardHeader, Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport { Redirect } from 'react-router';\n\nvar MedicationPeriodPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MedicationPeriodPage, _React$Component);\n\n  function MedicationPeriodPage(props) {\n    var _this;\n\n    _classCallCheck(this, MedicationPeriodPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MedicationPeriodPage).call(this, props));\n\n    _this.handleChange = function (event) {\n      var name = event.target.name;\n      var value = event.target.value;\n      var updatedControls = _this.state.formControls;\n      var updatedFormElement = updatedControls[name];\n      updatedFormElement.value = value;\n      updatedFormElement.touched = true;\n      updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n      updatedControls[name] = updatedFormElement;\n      var formIsValid = true;\n\n      for (var updatedFormElementName in updatedControls) {\n        formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\n      }\n\n      _this.setState({\n        formControls: updatedControls,\n        formIsValid: formIsValid\n      });\n    };\n\n    _this.state = {\n      medicationPeriodId: props.match.params.id,\n      medicationPeriod: null,\n      isLoadedMedicationPeriod: false,\n      patientIdToRedirect: null,\n      errorStatusMedicationPeriod: 0,\n      errorMedicationPeriod: null,\n      medication: null,\n      isLoadedMedication: false,\n      errorStatusMedication: 0,\n      errorMedication: null,\n      tableData: [],\n      isLoadedTableData: false,\n      errorTable: null,\n      errorStatusTable: false,\n      showMessage: false,\n      message: null,\n      formIsValid: false,\n      redirect: false,\n      redirectTo: \"\",\n      formControls: {\n        startDate: {\n          value: '',\n          placeholder: 'What is the start date?...',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 10,\n            isRequired: true,\n            dateValidator: true\n          }\n        },\n        stopDate: {\n          value: '',\n          placeholder: 'What is the stop date?...',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 10,\n            required: true,\n            dateValidator: true\n          }\n        }\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchMedication = _this.fetchMedication.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchMedicationPeriod = _this.fetchMedicationPeriod.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.afterFetchMedicationPeriod = _this.afterFetchMedicationPeriod.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteMedicationPeriod = _this.deleteMedicationPeriod.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.registerMedicationPeriod = _this.registerMedicationPeriod.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goToPatientPage = _this.goToPatientPage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toogleMessage = _this.toogleMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MedicationPeriodPage, [{\n    key: \"goToPatientPage\",\n    value: function goToPatientPage() {\n      this.state.redirect = true;\n      this.state.tedirectTo = \"patientPage/\" + this.patientId;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"setMedication\",\n    value: function setMedication(medication) {\n      this.state.medicationToSet = medication;\n      this.state.isLoadedMedicationToSet = true;\n      console.log(this.state.medicationToSet);\n      this.setState(this.state);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchMedicationPeriod();\n    }\n  }, {\n    key: \"afterFetchMedicationPeriod\",\n    value: function afterFetchMedicationPeriod() {\n      var formIsValid = true;\n\n      for (var formElementName in this.state.formControls) {\n        this.state[formElementName].valid = validate(this.state[formElementName].value, this.state[formElementName].validationRules);\n        formIsValid = this.state[formElementName].valid && formIsValid;\n      }\n\n      this.setState({\n        formControls: this.state.formControls,\n        formIsValid: formIsValid\n      });\n      this.fetchMedication();\n    }\n  }, {\n    key: \"fetchMedication\",\n    value: function fetchMedication() {\n      var _this2 = this;\n\n      return MEDICATION_API.getMedicationById(this.state.medicationPeriod.medicationId, function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this2.state.medication = result;\n          _this2.state.isLoadedMedication = true;\n\n          _this2.setState(_this2.state);\n        } else {\n          _this2.state.errorStatusMedication = status;\n          _this2.state.errorMedication = err;\n\n          _this2.setState(_this2.state);\n        }\n      });\n    }\n  }, {\n    key: \"fetchMedicationPeriod\",\n    value: function fetchMedicationPeriod() {\n      var _this3 = this;\n\n      var medicationPeriodIdToSend = {\n        id: this.state.medicationPeriodId\n      };\n      return MEDICATION_PERIOD_API.getMedicationPeriodById(medicationPeriodIdToSend, function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this3.state.medicationPeriod = result;\n          _this3.state.isLoadedMedicationPeriod = true;\n          _this3.state.formControls.startDate.value = result.startDate;\n          _this3.state.formControls.stopDate.value = result.startDate;\n          _this3.state.patientId = result.patientId;\n\n          _this3.setState(_this3.state);\n\n          _this3.afterFetchMedicationPeriod(); // console.log(\"MEdication:: \" + result);\n          // console.log(\"Medication resumt : \" + JSON.stringify(result)); zicea ceva a nu vedea ca primea object si nii in console nu il afica ca obiect numai [Object object]\n\n        } else {\n          _this3.state.errorStatusMedicationPeriod = status;\n          _this3.state.errorMedicationPeriod = err;\n\n          _this3.setState(_this3.state);\n        }\n      });\n    }\n  }, {\n    key: \"registerMedicationPeriod\",\n    value: function registerMedicationPeriod(mP) {\n      var _this4 = this;\n\n      console.log(JSON.stringify(mP));\n      return MEDICATION_PERIOD_API.postUpdateMedicationPeriod(mP, function (result, status, error) {\n        if (result !== null && (status === 200 || status === 201)) {\n          console.log(\"Successfully updated medication period with id: \" + result);\n        } else {\n          _this4.setState({\n            errorStatusMedicationPeriod: status,\n            errorMedicationPeriod: error\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var medicationPeriod = {\n        id: this.state.medicationPeriod.id,\n        startDate: this.state.formControls.startDate.value,\n        stopDate: this.state.formControls.stopDate.value\n      };\n      this.registerMedicationPeriod(medicationPeriod);\n    }\n  }, {\n    key: \"deleteMedicationPeriod\",\n    value: function deleteMedicationPeriod(medicationPeriodId) {\n      var _this5 = this;\n\n      return MEDICATION_PERIOD_API.deleteMedicationPeriod(medicationPeriodId, function (result, status, error) {\n        if (result !== null && (status === 200 || status === 201)) {\n          console.log(\"Successfully deleted mediation period with id: \" + result);\n          _this5.state.messsage = \"Successfully deleted medication period with id: \" + result;\n          _this5.state.showMessage = true;\n\n          _this5.setState(_this5.state);\n        } else {\n          var newState = _this5.state;\n          newState.errorStatusMedicationPeriod = status;\n          newState.errorMedicationPeriod = error;\n\n          _this5.setState(newState);\n        }\n      });\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete() {\n      var medicationPeriodId = this.state.medicationPeriodId;\n      this.deleteMedicationPeriod(medicationPeriodId);\n    }\n  }, {\n    key: \"toogleMessage\",\n    value: function toogleMessage() {\n      this.state.showMessage = false;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, this.state.redirect && React.createElement(Redirect, {\n        to: this.state.redirectTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.goToPatientPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"  Go Back \"), this.state.errorMedicationPeriod > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatusMedicationPeriod,\n        error: this.state.errorMedicationPeriod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        id: \"startDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"startDateField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \" startDate: \"), React.createElement(Input, {\n        name: \"startDate\",\n        id: \"startDateField\",\n        placeholder: this.state.formControls.startDate.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.startDate.value,\n        touched: this.state.formControls.startDate.touched ? 1 : 0,\n        valid: this.state.formControls.startDate.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), this.state.formControls.startDate.touched && !this.state.formControls.startDate.valid && React.createElement(\"div\", {\n        className: \"error-message row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \" * startDate format not valid \")), React.createElement(FormGroup, {\n        id: \"stopDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"stopDateField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \" stopDate: \"), React.createElement(Input, {\n        name: \"stopDate\",\n        id: \"stopDateField\",\n        placeholder: this.state.formControls.stopDate.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.stopDate.value,\n        touched: this.state.formControls.stopDate.touched ? 1 : 0,\n        valid: this.state.formControls.stopDate.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), this.state.formControls.stopDate.touched && !this.state.formControls.stopDate.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \" * stopDate format not valid\")), this.state.isLoadedMedication && React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '4',\n          offset: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"  \", JSON.stringify(this.state.medication), \" \"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '4',\n          offset: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        disabled: !this.state.formIsValid,\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"  Update \"), React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"  Delete \"))), this.state.showMessage && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, this.state.messsage), React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.toogleMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"  OK \")));\n    }\n  }]);\n\n  return MedicationPeriodPage;\n}(React.Component);\n\nexport default MedicationPeriodPage;","map":{"version":3,"sources":["D:\\DS\\react-demo\\src\\medication-period\\medication-period-page.js"],"names":["React","validate","Button","MEDICATION_PERIOD_API","APIResponseErrorMessage","Col","Row","FormGroup","Input","Label","MEDICATION_API","MedicationPeriodMedicationTable","Card","CardHeader","Modal","ModalBody","ModalHeader","Redirect","MedicationPeriodPage","props","handleChange","event","name","target","value","updatedControls","state","formControls","updatedFormElement","touched","valid","validationRules","formIsValid","updatedFormElementName","setState","medicationPeriodId","match","params","id","medicationPeriod","isLoadedMedicationPeriod","patientIdToRedirect","errorStatusMedicationPeriod","errorMedicationPeriod","medication","isLoadedMedication","errorStatusMedication","errorMedication","tableData","isLoadedTableData","errorTable","errorStatusTable","showMessage","message","redirect","redirectTo","startDate","placeholder","minLength","isRequired","dateValidator","stopDate","required","bind","handleSubmit","fetchMedication","fetchMedicationPeriod","afterFetchMedicationPeriod","handleDelete","deleteMedicationPeriod","registerMedicationPeriod","goToPatientPage","toogleMessage","tedirectTo","patientId","medicationToSet","isLoadedMedicationToSet","console","log","formElementName","getMedicationById","medicationId","result","status","err","medicationPeriodIdToSend","getMedicationPeriodById","mP","JSON","stringify","postUpdateMedicationPeriod","error","messsage","newState","size","offset","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport validate from \"./validators/medication-period-validators\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as MEDICATION_PERIOD_API from \"./api/medication-period-api\";\r\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\r\nimport {Col, Row} from \"reactstrap\";\r\nimport { FormGroup, Input, Label} from 'reactstrap';\r\nimport * as MEDICATION_API from \"../medication/api/medication-api\";\r\nimport MedicationPeriodMedicationTable from './medication-period-medication-table';\r\nimport {\r\n \r\n    Card,\r\n    CardHeader,\r\n     Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    \r\n} from 'reactstrap';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nclass MedicationPeriodPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n  \r\n        this.state = {\r\n            medicationPeriodId : props.match.params.id,\r\n            medicationPeriod : null,\r\n            isLoadedMedicationPeriod : false,\r\n\r\n            patientIdToRedirect : null,\r\n            errorStatusMedicationPeriod: 0,\r\n            errorMedicationPeriod: null,\r\n             \r\n\r\n            medication : null,\r\n            isLoadedMedication : false,\r\n\r\n            errorStatusMedication: 0,\r\n            errorMedication: null,\r\n\r\n            tableData : [],\r\n            isLoadedTableData: false , \r\n            \r\n            errorTable: null,\r\n            errorStatusTable : false,\r\n\r\n            showMessage : false,\r\n            message : null,\r\n\r\n            formIsValid: false,\r\n\r\n\r\n\r\n            redirect : false,\r\n            redirectTo : \"\",\r\n\r\n\r\n            formControls: {\r\n                startDate: {\r\n                    value: '',\r\n                    placeholder: 'What is the start date?...',\r\n                    valid: false,\r\n                    touched: false,\r\n                    validationRules: {\r\n                        minLength: 10,\r\n                        isRequired: true,\r\n                        dateValidator : true\r\n                    }\r\n                },\r\n                stopDate: {\r\n                    value: '',\r\n                    placeholder: 'What is the stop date?...',\r\n                    valid: false,\r\n                    touched: false,\r\n                    validationRules: {\r\n\r\nminLength: 10 ,\r\nrequired : true,\r\ndateValidator : true                    }\r\n                }\r\n                 \r\n            }\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.fetchMedication = this.fetchMedication.bind(this);\r\n        this.fetchMedicationPeriod = this.fetchMedicationPeriod.bind(this);\r\n        this.afterFetchMedicationPeriod = this.afterFetchMedicationPeriod.bind(this);\r\n\r\n        this.handleDelete= this.handleDelete.bind(this);\r\n        this.deleteMedicationPeriod = this.deleteMedicationPeriod.bind(this);\r\n        this.registerMedicationPeriod = this.registerMedicationPeriod.bind(this);\r\n        this.goToPatientPage = this.goToPatientPage.bind(this);\r\n        this.toogleMessage = this.toogleMessage.bind(this);\r\n     }\r\ngoToPatientPage()\r\n{\r\n    this.state.redirect = true;\r\n    this.state.tedirectTo = \"patientPage/\"+this.patientId;\r\n    this.setState(this.state);\r\n}\r\n   \r\nsetMedication(medication)\r\n{\r\n    this.state.medicationToSet = medication;\r\n    this.state.isLoadedMedicationToSet = true;\r\n    console.log(this.state.medicationToSet);\r\n    this.setState(this.state);\r\n}\r\n\r\n\r\ncomponentDidMount()\r\n{\r\n    this.fetchMedicationPeriod();\r\n }\r\n\r\n afterFetchMedicationPeriod()\r\n {\r\n\r\n\r\n    \r\n    let formIsValid = true;\r\n    for (let formElementName in this.state.formControls) {\r\n        this.state[formElementName].valid = validate(this.state[formElementName].value, this.state[formElementName].validationRules);\r\n\r\n        formIsValid = this.state[formElementName].valid && formIsValid;\r\n    }\r\n\r\n    this.setState({\r\n        formControls : this.state.formControls,\r\n         formIsValid: formIsValid\r\n    });\r\n    \r\n     this.fetchMedication();\r\n }\r\nfetchMedication() {\r\n    return MEDICATION_API.getMedicationById(this.state.medicationPeriod.medicationId,(result, status, err) => {\r\n\r\n        if (result !== null && status === 200) {\r\n            this.state.medication = result;\r\n            this.state.isLoadedMedication = true;\r\n            this.setState(this.state);\r\n         } else {\r\n            this.state.errorStatusMedication = status;\r\n            this.state.errorMedication = err;\r\n            this.setState(this.state);\r\n        }\r\n    });\r\n}\r\nfetchMedicationPeriod() {\r\nlet medicationPeriodIdToSend = {\r\n    id : this.state.medicationPeriodId\r\n};\r\n\r\n  return MEDICATION_PERIOD_API.getMedicationPeriodById(medicationPeriodIdToSend,(result, status, err) => {\r\n\r\n        if (result !== null && status === 200) {\r\n  this.state.medicationPeriod = result;\r\n  this.state.isLoadedMedicationPeriod = true;\r\n  this.state.formControls.startDate.value = result.startDate;\r\n  this.state.formControls.stopDate.value = result.startDate;\r\n  this.state.patientId = result.patientId;\r\n  this.setState(this.state);\r\n  this.afterFetchMedicationPeriod()\r\n            // console.log(\"MEdication:: \" + result);\r\n          // console.log(\"Medication resumt : \" + JSON.stringify(result)); zicea ceva a nu vedea ca primea object si nii in console nu il afica ca obiect numai [Object object]\r\n        } else {\r\n            this.state.errorStatusMedicationPeriod = status;\r\n            this.state.errorMedicationPeriod = err;\r\n            this.setState(this.state);\r\n        }\r\n    });\r\n}\r\n\r\n\r\n    handleChange = event => {\r\n\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        const updatedControls = this.state.formControls;\r\n\r\n        const updatedFormElement = updatedControls[name];\r\n\r\n        updatedFormElement.value = value;\r\n        updatedFormElement.touched = true;\r\n        updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\r\n        updatedControls[name] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for (let updatedFormElementName in updatedControls) {\r\n            formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({\r\n            formControls: updatedControls,\r\n            formIsValid: formIsValid\r\n        });\r\n\r\n    };\r\n\r\n    registerMedicationPeriod(mP) {\r\n        console.log(JSON.stringify(mP));\r\n        return MEDICATION_PERIOD_API.postUpdateMedicationPeriod(mP, (result, status, error) => {\r\n            if (result !== null && (status === 200 || status === 201)) {\r\n                console.log(\"Successfully updated medication period with id: \" + result);\r\n             } else {\r\n                this.setState(({\r\n                    errorStatusMedicationPeriod: status,\r\n                    errorMedicationPeriod: error\r\n                }));\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit() {\r\n        let medicationPeriod = {\r\nid : this.state.medicationPeriod.id,\r\n            startDate: this.state.formControls.startDate.value,\r\n            stopDate: this.state.formControls.stopDate.value\r\n             \r\n        };\r\n\r\n         this.registerMedicationPeriod(medicationPeriod);\r\n    }\r\n\r\n    deleteMedicationPeriod(medicationPeriodId) {\r\n        return MEDICATION_PERIOD_API.deleteMedicationPeriod(medicationPeriodId, (result, status, error) => {\r\n            if (result !== null && (status === 200 || status === 201)) {\r\n                console.log(\"Successfully deleted mediation period with id: \" + result);\r\n                 \r\n                this.state.messsage =\"Successfully deleted medication period with id: \" + result;\r\n                this.state.showMessage = true;\r\n                this.setState(this.state);\r\n    \r\n             } else {\r\n                let newState = this.state;\r\n                newState.errorStatusMedicationPeriod = status;\r\n                newState.errorMedicationPeriod = error;\r\n                this.setState(newState);\r\n            }\r\n        });\r\n    }\r\n    \r\nhandleDelete() {\r\n    let medicationPeriodId = this.state.medicationPeriodId;\r\n\r\n     this.deleteMedicationPeriod(medicationPeriodId);\r\n    \r\n}\r\ntoogleMessage()\r\n{\r\n    this.state.showMessage = false;\r\n    this.setState(this.state);\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.redirect && <Redirect to = {this.state.redirectTo}/>}\r\n                <Button type={\"submit\"}  onClick={this.goToPatientPage}>  Go Back </Button>\r\n\r\n\r\n{\r\n                    this.state.errorMedicationPeriod > 0 &&\r\n                    <APIResponseErrorMessage errorStatus={this.state.errorStatusMedicationPeriod} error={this.state.errorMedicationPeriod}/>\r\n                }\r\n                <FormGroup id='startDate'>\r\n                    <Label for='startDateField'> startDate: </Label>\r\n                    <Input name='startDate' id='startDateField' placeholder={this.state.formControls.startDate.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.startDate.value}\r\n                           touched={this.state.formControls.startDate.touched? 1 : 0}\r\n                           valid={this.state.formControls.startDate.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.startDate.touched && !this.state.formControls.startDate.valid &&\r\n                    <div className={\"error-message row\"}> * startDate format not valid </div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='stopDate'>\r\n                    <Label for='stopDateField'> stopDate: </Label>\r\n                    <Input name='stopDate' id='stopDateField' placeholder={this.state.formControls.stopDate.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.stopDate.value}\r\n                           touched={this.state.formControls.stopDate.touched? 1 : 0}\r\n                           valid={this.state.formControls.stopDate.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.stopDate.touched && !this.state.formControls.stopDate.valid &&\r\n                    <div className={\"error-message\"}> * stopDate format not valid</div>}\r\n                </FormGroup>\r\n\r\n                {this.state.isLoadedMedication &&\r\n                <Row>\r\n                        <Col sm={{size: '4', offset: 8}}>\r\n                            <p>  {JSON.stringify(this.state.medication)} </p>\r\n                        </Col>\r\n                    </Row>\r\n    }\r\n                    <Row>\r\n                        <Col sm={{size: '4', offset: 8}}>\r\n                            <Button type={\"submit\"} disabled={(!this.state.formIsValid) } onClick={this.handleSubmit}>  Update </Button>\r\n                            <Button type={\"submit\"}  onClick={this.handleDelete}>  Delete </Button>\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                \r\n\r\n                    {this.state.showMessage && \r\n                     <div>\r\n                            <p>{this.state.messsage}</p>\r\n                            <Button type={\"submit\"}   onClick={this.toogleMessage}>  OK </Button>\r\n                            </div>\r\n                        \r\n                    \r\n    }\r\n\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nexport default MedicationPeriodPage;\r\n"]},"metadata":{},"sourceType":"module"}