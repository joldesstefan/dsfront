{"ast":null,"code":"import { HOST } from '../../commons/hosts';\nimport RestApiClient from \"../../commons/api/rest-client\";\nvar endpoint = {\n  doctor: '/doctor',\n  update: \"/update\",\n  delete: \"/delete\"\n};\n\nfunction getDoctorById(params, callback) {\n  var request = new Request(HOST.backend_api + endpoint.doctor + \"/\" + params.id, {\n    method: 'GET'\n  });\n  console.log(request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction postDoctor(user, callback) {\n  var request = new Request(HOST.backend_api + endpoint.doctor, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction postUpdateDoctor(user, callback) {\n  var request = new Request(HOST.backend_api + endpoint.doctor + endpoint.update, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction deleteDoctor(doctorId, callback) {\n  var request = new Request(HOST.backend_api + endpoint.doctor + endpoint.delete + \"/\" + doctorId, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nexport { postDoctor, postUpdateDoctor, getDoctorById, deleteDOctor };","map":{"version":3,"sources":["D:\\DS\\react-demo\\src\\doctor\\api\\doctor-api.js"],"names":["HOST","RestApiClient","endpoint","doctor","update","delete","getDoctorById","params","callback","request","Request","backend_api","id","method","console","log","url","performRequest","postDoctor","user","headers","body","JSON","stringify","postUpdateDoctor","deleteDoctor","doctorId","deleteDOctor"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AAGA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,MAAM,EAAE,SADK;AAEbC,EAAAA,MAAM,EAAC,SAFM;AAGbC,EAAAA,MAAM,EAAG;AAHI,CAAjB;;AAQA,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,QAA/B,EAAwC;AACpC,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYV,IAAI,CAACW,WAAL,GAAmBT,QAAQ,CAACC,MAA5B,GAAqC,GAArC,GAAyCI,MAAM,CAACK,EAA5D,EAAgE;AAC3EC,IAAAA,MAAM,EAAE;AADmE,GAAhE,CAAd;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACO,GAApB;AACAf,EAAAA,aAAa,CAACgB,cAAd,CAA6BR,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SAASU,UAAT,CAAoBC,IAApB,EAA0BX,QAA1B,EAAmC;AAC/B,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYV,IAAI,CAACW,WAAL,GAAmBT,QAAQ,CAACC,MAAxC,EAAiD;AAC3DU,IAAAA,MAAM,EAAE,MADmD;AAE3DO,IAAAA,OAAO,EAAG;AACN,gBAAU,kBADJ;AAEN,sBAAgB;AAFV,KAFiD;AAM3DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AANqD,GAAjD,CAAd;AASAL,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUN,OAAO,CAACO,GAA9B;AAEAf,EAAAA,aAAa,CAACgB,cAAd,CAA6BR,OAA7B,EAAsCD,QAAtC;AACH;;AAGD,SAASgB,gBAAT,CAA0BL,IAA1B,EAAgCX,QAAhC,EAAyC;AACrC,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYV,IAAI,CAACW,WAAL,GAAmBT,QAAQ,CAACC,MAA5B,GAAqCD,QAAQ,CAACE,MAA1D,EAAkE;AAC5ES,IAAAA,MAAM,EAAE,MADoE;AAE5EO,IAAAA,OAAO,EAAG;AACN,gBAAU,kBADJ;AAEN,sBAAgB;AAFV,KAFkE;AAM5EC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AANsE,GAAlE,CAAd;AASAL,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUN,OAAO,CAACO,GAA9B;AAEAf,EAAAA,aAAa,CAACgB,cAAd,CAA6BR,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SAASiB,YAAT,CAAsBC,QAAtB,EAAgClB,QAAhC,EAAyC;AACrC,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYV,IAAI,CAACW,WAAL,GAAmBT,QAAQ,CAACC,MAA5B,GAAqCD,QAAQ,CAACG,MAA9C,GAAuD,GAAvD,GAA6DqB,QAAzE,EAAmF;AAC7Fb,IAAAA,MAAM,EAAE,QADqF;AAE7FO,IAAAA,OAAO,EAAG;AACN,gBAAU,kBADJ;AAEN,sBAAgB;AAFV;AAFmF,GAAnF,CAAd;AAQAN,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUN,OAAO,CAACO,GAA9B;AAEAf,EAAAA,aAAa,CAACgB,cAAd,CAA6BR,OAA7B,EAAsCD,QAAtC;AACH;;AACD,SACIU,UADJ,EAEIM,gBAFJ,EAGIlB,aAHJ,EAIIqB,YAJJ","sourcesContent":["import {HOST} from '../../commons/hosts';\r\nimport RestApiClient from \"../../commons/api/rest-client\";\r\n\r\n\r\nconst endpoint = {\r\n    doctor: '/doctor',\r\n    update:\"/update\",\r\n    delete : \"/delete\"\r\n};\r\n\r\n \r\n\r\nfunction getDoctorById(params, callback){\r\n    let request = new Request(HOST.backend_api + endpoint.doctor + \"/\"+params.id, {\r\n       method: 'GET'\r\n    });\r\n\r\n    console.log(request.url);\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction postDoctor(user, callback){\r\n    let request = new Request(HOST.backend_api + endpoint.doctor , {\r\n        method: 'POST',\r\n        headers : {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user)\r\n    });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\n\r\nfunction postUpdateDoctor(user, callback){\r\n    let request = new Request(HOST.backend_api + endpoint.doctor + endpoint.update, {\r\n        method: 'POST',\r\n        headers : {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user)\r\n    });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction deleteDoctor(doctorId, callback){\r\n    let request = new Request(HOST.backend_api + endpoint.doctor + endpoint.delete + \"/\" + doctorId, {\r\n        method: 'DELETE',\r\n        headers : {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n     });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\nexport {\r\n    postDoctor,\r\n    postUpdateDoctor,\r\n    getDoctorById,\r\n    deleteDOctor\r\n};\r\n"]},"metadata":{},"sourceType":"module"}