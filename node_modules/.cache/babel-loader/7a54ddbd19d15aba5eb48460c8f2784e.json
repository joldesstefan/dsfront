{"ast":null,"code":"import _classCallCheck from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\DS\\\\react-demo\\\\src\\\\patient\\\\patient-page.js\";\nimport React from 'react';\nimport validate from \"./validators/patient-validators\";\nimport Button from \"react-bootstrap/Button\";\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport { Col, Row } from \"reactstrap\";\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport { Redirect } from 'react-router';\nimport * as PATIENT_API from \"./api/patient-api\";\nimport * as CAREGIVER_API from \"../caregiver/api/caregiver-api\";\nimport { Card, CardHeader, Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport PatientCaregiverTable from './patient-caregiver-table';\n\nvar PatientPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PatientPage, _React$Component);\n\n  function PatientPage(props) {\n    var _this;\n\n    _classCallCheck(this, PatientPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientPage).call(this, props));\n    _this.state = {\n      redirect: false,\n      redirectTo: \"/\",\n      patientId: props.match.params.id,\n      patient: null,\n      caregiver: null,\n      caregiverToSet: null,\n      caregiverToSetLoaded: false,\n      isLoadedCaregiver: false,\n      isLoaded: false,\n      tableDataCaregiver: [],\n      isLoadedTableDataCaregiver: false,\n      errorStatus: 0,\n      error: \"\",\n      showMessage: false,\n      messsage: \"\",\n      formIsValid: false,\n      formControls: {\n        name: {\n          value: '',\n          placeholder: 'What is the patient\\'s name?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: false\n          }\n        },\n        username: {\n          value: '',\n          placeholder: 'What is the patient\\'s Username?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: true\n          }\n        },\n        password: {\n          value: '',\n          placeholder: 'What is the patient\\'s Password?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: false\n          }\n        },\n        birthDate: {\n          value: '',\n          placeholder: 'What is the patient\\'s Birth Date?...YYYY-MM-DD',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 10,\n            isRequired: false,\n            dateValidator: true\n          }\n        },\n        gender: {\n          value: '',\n          placeholder: 'What is the patient\\'s Gender ?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: false\n          }\n        },\n        address: {\n          value: '',\n          placeholder: 'What is the patient\\'s Address ?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: false\n          }\n        },\n        medicalRecord: {\n          value: '',\n          placeholder: 'What is the patient\\'s Medical Record ?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: false\n          }\n        }\n      }\n    };\n    _this.fetchPatient = _this.fetchPatient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.registerPatient = _this.registerPatient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toogleMessage = _this.toogleMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goToPatientHome = _this.goToPatientHome.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.afterFetchPatient = _this.afterFetchPatient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deletePatient = _this.deletePatient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchCaregiver = _this.fetchCaregiver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchTableDataCaregiver = _this.fetchTableDataCaregiver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PatientPage, [{\n    key: \"fetchPatient\",\n    value: function fetchPatient() {\n      var _this2 = this;\n\n      var newParams = {\n        \"id\": this.state.patientId\n      };\n      return PATIENT_API.getPatientById(newParams, function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this2.state.patient = result;\n          _this2.state.isLoaded = true;\n          _this2.state.formControls.name.value = result.name;\n          _this2.state.formControls.username.value = result.username;\n          _this2.state.formControls.password.value = result.password;\n          _this2.state.formControls.birthDate.value = result.birthDate;\n          _this2.state.formControls.gender.value = result.gender;\n          _this2.state.formControls.address.value = result.address;\n          _this2.state.formControls.medicalRecord.value = result.medicalRecord;\n\n          _this2.setState(_this2.state);\n\n          _this2.afterFetchPatient();\n        } else {\n          _this2.state.errorStatus = status;\n          _this2.state.error = err;\n\n          _this2.setState(_this2.state);\n        }\n      });\n    }\n  }, {\n    key: \"fetchCaregiver\",\n    value: function fetchCaregiver() {\n      var _this3 = this;\n\n      if (this.state.patient.caregiverId != null) {\n        var newParams = {\n          \"id\": this.state.patient.caregiverId\n        };\n        return CAREGIVER_API.getCaregiverById(newParams, function (result, status, err) {\n          if (result !== null && status === 200) {\n            _this3.state.caregiver = result;\n            _this3.state.isLoadedCaregiver = true;\n\n            _this3.setState(_this3.state);\n\n            _this3.afterFetchCaregiver();\n          } else {\n            _this3.state.errorStatus = status;\n            _this3.state.error = err;\n\n            _this3.setState(_this3.state);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"fetchTableDataCaregiver\",\n    value: function fetchTableDataCaregiver() {\n      var _this4 = this;\n\n      return CAREGIVER_API.getCaregiver(function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this4.state.tableDataCaregiver = result; // console.log(\"USer resumt : \" + result);\n\n          _this4.state.isLoadedTableDataCaregiver = true;\n\n          _this4.setState(_this4.state);\n        } else {\n          _this4.state.errorStatus = status;\n          _this4.state.error = err;\n\n          _this4.setState(_this4.state);\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.state.isLoadedTableDataCaregiver = false;\n      this.state.isLoadedCaregiver = false;\n      this.state.isLoaded = false;\n      this.setState(this.state);\n      this.fetchPatient();\n      this.fetchTableDataCaregiver();\n    }\n  }, {\n    key: \"afterFetchPatient\",\n    value: function afterFetchPatient() {\n      var formIsValid = true;\n\n      for (var formElementName in this.state.formControls) {\n        this.state.formControls[formElementName].valid = validate(this.state.formControls[formElementName].value, this.state.formControls[formElementName].validationRules);\n        this.setState(this.state);\n        formIsValid = this.state.formControls[formElementName].valid && formIsValid;\n      }\n\n      var newState = this.state;\n      newState.formIsValid = formIsValid;\n      this.setState(newState);\n      this.fetchCaregiver();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var name = event.target.name;\n      var value = event.target.value;\n      var updatedControls = this.state.formControls;\n      var updatedFormElement = updatedControls[name];\n      updatedFormElement.value = value;\n      updatedFormElement.touched = true;\n      updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n      updatedControls[name] = updatedFormElement;\n      var formIsValid = true;\n\n      for (var updatedFormElementName in updatedControls) {\n        formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\n      }\n\n      var newState = this.state;\n      newState.formControls = updatedControls;\n      newState.formIsValid = formIsValid;\n      this.setState(newState);\n    }\n  }, {\n    key: \"registerPatient\",\n    value: function registerPatient(patient) {\n      var _this5 = this;\n\n      return PATIENT_API.postUpdatePatient(patient, function (result, status, error) {\n        if (result !== null && (status === 200 || status === 201)) {\n          console.log(\"Successfully updated patient with id: \" + result);\n          _this5.state.messsage = \"Successfully updated patient with id: \" + result;\n          _this5.state.showMessage = true;\n\n          _this5.setState(_this5.state);\n        } else {\n          var newState = _this5.state;\n          newState.errorStatus = status;\n          newState.error = error;\n\n          _this5.setState(newState);\n        }\n      });\n    }\n  }, {\n    key: \"deletePatient\",\n    value: function deletePatient(patientId) {\n      var _this6 = this;\n\n      return PATIENT_API.deletePatient(patientId, function (result, status, error) {\n        if (result !== null && (status === 200 || status === 201)) {\n          console.log(\"Successfully deleted patient with id: \" + result);\n          _this6.state.messsage = \"Successfully deleted patient with id: \" + result;\n          _this6.state.showMessage = true;\n\n          _this6.setState(_this6.state);\n        } else {\n          var newState = _this6.state;\n          newState.errorStatus = status;\n          newState.error = error;\n\n          _this6.setState(newState);\n        }\n      });\n    }\n  }, {\n    key: \"toogleMessage\",\n    value: function toogleMessage() {\n      this.state.showMessage = false;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"goToPatientHome\",\n    value: function goToPatientHome() {\n      this.state.redirectTo = \"/doctorHome\";\n      this.state.redirect = true;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var patient = {\n        id: this.state.patientId,\n        name: this.state.formControls.name.value,\n        username: this.state.formControls.username.value,\n        password: this.state.formControls.password.value,\n        birthDate: this.state.formControls.birthDate.value,\n        gender: this.state.formControls.gender.value,\n        address: this.state.formControls.address.value,\n        medicalRecord: this.state.formControls.medicalRecord.value\n      };\n      console.log(patient);\n      this.registerPatient(patient);\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete() {\n      var patientId = this.state.patientId;\n      this.deletePatient(patientId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"REDER);\");\n      console.log(this.state.isLoaded);\n      console.log(this.state.redirect);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, this.state.redirect === false && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, \" \", this.state.patientId), this.state.redirect === false && this.state.isLoaded === true && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \" \", JSON.stringify(this.state.patient)), \" \", React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \" \", this.state.patientId)), this.state.redirect === true && React.createElement(Redirect, {\n        to: this.state.redirectTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.goToPatientHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"  Go to Doctor Home Page \"), React.createElement(FormGroup, {\n        id: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"nameField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \" Name: \"), React.createElement(Input, {\n        name: \"name\",\n        id: \"nameField\",\n        placeholder: this.state.formControls.name.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.name.value,\n        touched: this.state.formControls.name.touched ? 1 : 0,\n        valid: this.state.formControls.name.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }), this.state.formControls.name.touched && !this.state.formControls.name.valid && React.createElement(\"div\", {\n        className: \"error-message row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, \" * Name must have at least 3 characters \")), React.createElement(FormGroup, {\n        id: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"usernameField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \" Username: \"), React.createElement(Input, {\n        name: \"username\",\n        id: \"usernameField\",\n        placeholder: this.state.formControls.username.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.username.value,\n        touched: this.state.formControls.username.touched ? 1 : 0,\n        valid: this.state.formControls.username.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }), this.state.formControls.username.touched && !this.state.formControls.username.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \" * Username must have at least 3 characters\")), React.createElement(FormGroup, {\n        id: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"passwordField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, \" Password: \"), React.createElement(Input, {\n        name: \"password\",\n        id: \"passwordField\",\n        placeholder: this.state.formControls.password.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.password.value,\n        touched: this.state.formControls.password.touched ? 1 : 0,\n        valid: this.state.formControls.password.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }), this.state.formControls.password.touched && !this.state.formControls.password.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \" * Password must have at least 3 characters\")), React.createElement(FormGroup, {\n        id: \"birthDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"birthDateField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \" birthDate: \"), React.createElement(Input, {\n        name: \"birthDate\",\n        id: \"birthDateField\",\n        placeholder: this.state.formControls.birthDate.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.birthDate.value,\n        touched: this.state.formControls.birthDate.touched ? 1 : 0,\n        valid: this.state.formControls.birthDate.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }), this.state.formControls.birthDate.touched && !this.state.formControls.birthDate.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, \" * Not valid format\")), React.createElement(FormGroup, {\n        id: \"gender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"genderField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, \" gender: \"), React.createElement(Input, {\n        name: \"gender\",\n        id: \"genderField\",\n        placeholder: this.state.formControls.gender.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.gender.value,\n        touched: this.state.formControls.gender.touched ? 1 : 0,\n        valid: this.state.formControls.gender.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }), this.state.formControls.gender.touched && !this.state.formControls.gender.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, \" * gender must have at least 3 characters\")), React.createElement(FormGroup, {\n        id: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"addressField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, \" address: \"), React.createElement(Input, {\n        name: \"address\",\n        id: \"addressField\",\n        placeholder: this.state.formControls.address.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.address.value,\n        touched: this.state.formControls.address.touched ? 1 : 0,\n        valid: this.state.formControls.address.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }), this.state.formControls.address.touched && !this.state.formControls.address.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, \" * address must have at least 3 characters\")), React.createElement(FormGroup, {\n        id: \"medicalRecord\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"medicalRecordField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, \" medicalRecord: \"), React.createElement(Input, {\n        name: \"medicalRecord\",\n        id: \"medicalRecordField\",\n        placeholder: this.state.formControls.medicalRecord.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.medicalRecord.value,\n        touched: this.state.formControls.medicalRecord.touched ? 1 : 0,\n        valid: this.state.formControls.medicalRecord.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }), this.state.formControls.medicalRecord.touched && !this.state.formControls.medicalRecord.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, \" * medicalRecord must have at least 3 characters\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '4',\n          offset: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        disabled: !this.state.formIsValid,\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, \"  Update \"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '4',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"delete\",\n        onClick: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"  Delete \"))), this.state.showMessage && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, this.state.messsage), React.createElement(Button, {\n        type: \"submit\",\n        onClick: this.toogleMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, \"  OK \")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, \" Caregiever management \")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, this.state.isLoadedCaregiver && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, \"Caregiver : \", this.state.caregiver.username, \" - \", this.state.caregiver.name), !this.state.isLoadedCaregiver && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, \" Unknown caregiver\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '8',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, this.state.isLoadedTableDataCaregiver && React.createElement(PatientCaregiverTable, {\n        tableData: this.state.tableDataCaregiver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }), this.state.errorStatusCaregiverTable > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatusCaregiverTable,\n        error: this.state.errorCaregiverTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }))))), this.state.showMessage && React.createElement(Modal, {\n        isOpen: this.state.showMessage,\n        toggle: this.toogleMessage,\n        className: this.props.className,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toogleMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, \" \", this.state.messsage, \" \")), this.state.errorStatus > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatus,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PatientPage;\n}(React.Component);\n\nexport default PatientPage;","map":{"version":3,"sources":["D:\\DS\\react-demo\\src\\patient\\patient-page.js"],"names":["React","validate","Button","APIResponseErrorMessage","Col","Row","FormGroup","Input","Label","Redirect","PATIENT_API","CAREGIVER_API","Card","CardHeader","Modal","ModalBody","ModalHeader","PatientCaregiverTable","PatientPage","props","state","redirect","redirectTo","patientId","match","params","id","patient","caregiver","caregiverToSet","caregiverToSetLoaded","isLoadedCaregiver","isLoaded","tableDataCaregiver","isLoadedTableDataCaregiver","errorStatus","error","showMessage","messsage","formIsValid","formControls","name","value","placeholder","valid","touched","validationRules","minLength","isRequired","username","password","birthDate","dateValidator","gender","address","medicalRecord","fetchPatient","bind","handleChange","handleSubmit","registerPatient","toogleMessage","goToPatientHome","afterFetchPatient","handleDelete","deletePatient","fetchCaregiver","fetchTableDataCaregiver","newParams","getPatientById","result","status","err","setState","caregiverId","getCaregiverById","afterFetchCaregiver","getCaregiver","formElementName","newState","event","target","updatedControls","updatedFormElement","updatedFormElementName","postUpdatePatient","console","log","JSON","stringify","size","offset","errorStatusCaregiverTable","errorCaregiverTable","className","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport validate from \"./validators/patient-validators\";\r\nimport Button from \"react-bootstrap/Button\";\r\n import APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\r\nimport {Col, Row} from \"reactstrap\";\r\nimport { FormGroup, Input, Label} from 'reactstrap';\r\nimport { Redirect } from 'react-router';\r\nimport * as PATIENT_API from \"./api/patient-api\";\r\nimport * as CAREGIVER_API from \"../caregiver/api/caregiver-api\";\r\n\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader\r\n} from 'reactstrap';\r\nimport PatientCaregiverTable from './patient-caregiver-table';\r\n \r\nclass PatientPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\nredirect : false,\r\nredirectTo : \"/\",\r\npatientId : props.match.params.id,\r\npatient : null,\r\ncaregiver: null,\r\ncaregiverToSet: null,\r\ncaregiverToSetLoaded: false,\r\n\r\nisLoadedCaregiver : false,\r\nisLoaded : false,\r\n\r\n\r\ntableDataCaregiver : [],\r\nisLoadedTableDataCaregiver : false,\r\n\r\n\r\nerrorStatus : 0,\r\nerror : \"\",\r\nshowMessage : false,\r\nmesssage : \"\",\r\nformIsValid: false,\r\nformControls: {\r\n    \r\n    \r\n    name: {\r\n        value: '',\r\n        placeholder: 'What is the patient\\'s name?',\r\n        valid: false,\r\n        touched: false,\r\n        validationRules: {\r\n            minLength: 3,\r\n            isRequired: false\r\n        }\r\n    },\r\n    username: {\r\n        value: '',\r\n        placeholder: 'What is the patient\\'s Username?',\r\n        valid: false,\r\n        touched: false,\r\n        validationRules: {\r\n            minLength: 3,\r\n            isRequired: true\r\n        }\r\n    },\r\n    password: {\r\n        value: '',\r\n        placeholder: 'What is the patient\\'s Password?',\r\n        valid: false,\r\n        touched: false,\r\n        validationRules: {\r\n            minLength: 3,\r\n            isRequired: false\r\n        }\r\n    },\r\n    birthDate: {\r\n        value: '',\r\n        placeholder: 'What is the patient\\'s Birth Date?...YYYY-MM-DD',\r\n        valid: false,\r\n        touched: false,\r\n        validationRules: {\r\n            minLength: 10,\r\n            isRequired: false,\r\n            dateValidator: true\r\n        }\r\n    },\r\n    gender: {\r\n        value: '',\r\n        placeholder: 'What is the patient\\'s Gender ?',\r\n        valid: false,\r\n        touched: false,\r\n        validationRules: {\r\n            minLength: 3,\r\n            isRequired: false\r\n        }\r\n    },\r\n    address: {\r\n        value: '',\r\n        placeholder: 'What is the patient\\'s Address ?',\r\n        valid: false,\r\n        touched: false,\r\n        validationRules: {\r\n            minLength: 3,\r\n            isRequired: false\r\n        }\r\n    },\r\n    medicalRecord: {\r\n        value: '',\r\n        placeholder: 'What is the patient\\'s Medical Record ?',\r\n        valid: false,\r\n        touched: false,\r\n        validationRules: {\r\n            minLength: 3,\r\n            isRequired: false\r\n        }\r\n    }\r\n\r\n          \r\n     \r\n}\r\n\r\n \r\n        }\r\n            this.fetchPatient = this.fetchPatient.bind(this);\r\nthis.handleChange = this.handleChange.bind(this);\r\nthis.handleSubmit = this.handleSubmit.bind(this);\r\nthis.registerPatient = this.registerPatient.bind(this);\r\nthis.toogleMessage = this.toogleMessage.bind(this);\r\nthis.goToPatientHome = this.goToPatientHome.bind(this);\r\nthis.afterFetchPatient = this.afterFetchPatient.bind(this);\r\nthis.handleDelete = this.handleDelete.bind(this);\r\nthis.deletePatient = this.deletePatient.bind(this);\r\nthis.fetchCaregiver = this.fetchCaregiver.bind(this);\r\nthis.fetchTableDataCaregiver = this.fetchTableDataCaregiver.bind(this);\r\n\r\n   }\r\n\r\n    fetchPatient() {\r\n        let newParams = {\"id\" :  this.state.patientId};\r\n        return PATIENT_API.getPatientById(newParams,(result, status, err) => {\r\n            if (result !== null && status === 200) {\r\n                  this.state.patient = result;\r\n                 this.state.isLoaded = true;\r\n                 this.state.formControls.name.value = result.name;\r\n                 this.state.formControls.username.value = result.username;\r\n                 this.state.formControls.password.value = result.password;\r\n                 this.state.formControls.birthDate.value = result.birthDate;\r\n                 this.state.formControls.gender.value = result.gender;\r\n                 this.state.formControls.address.value = result.address;\r\n                 this.state.formControls.medicalRecord.value = result.medicalRecord;\r\n\r\n                  this.setState(this.state);\r\n                 this.afterFetchPatient();\r\n             } else {\r\n                  this.state.errorStatus = status;\r\n                 this.state.error = err;\r\n                 this.setState(this.state);\r\n                 \r\n            }\r\n         \r\n        });\r\n    }\r\n    fetchCaregiver() {\r\n        if(this.state.patient.caregiverId != null)\r\n        {\r\n        let newParams = {\"id\" :  this.state.patient.caregiverId};\r\n        return CAREGIVER_API.getCaregiverById(newParams,(result, status, err) => {\r\n            if (result !== null && status === 200) {\r\n                  this.state.caregiver = result;\r\n                  this.state.isLoadedCaregiver = true;\r\n\r\n                  this.setState(this.state);\r\n                 this.afterFetchCaregiver();\r\n             } else {\r\n                  this.state.errorStatus = status;\r\n                 this.state.error = err;\r\n                 this.setState(this.state);\r\n                 \r\n            }\r\n         \r\n        });\r\n    }\r\n    }\r\n\r\n\r\n    fetchTableDataCaregiver() {\r\n        return CAREGIVER_API.getCaregiver((result, status, err) => {\r\n\r\n            if (result !== null && status === 200) {\r\n                this.state.tableDataCaregiver = result;\r\n               // console.log(\"USer resumt : \" + result);\r\n\r\n                this.state.isLoadedTableDataCaregiver = true;\r\n                this.setState(this.state);\r\n            } else {\r\n                this.state.errorStatus = status;\r\n                this.state.error = err;\r\n                this.setState(this.state);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\ncomponentDidMount()\r\n{ \r\n       this.state.isLoadedTableDataCaregiver = false;\r\n    this.state.isLoadedCaregiver = false;\r\n    this.state.isLoaded = false;\r\n    this.setState(this.state);\r\n    this.fetchPatient();\r\nthis.fetchTableDataCaregiver();\r\n   \r\n\r\n\r\n}\r\n\r\nafterFetchPatient()\r\n{\r\n    let formIsValid = true;\r\n    for (let formElementName in this.state.formControls) {\r\n        this.state.formControls[formElementName].valid = validate(this.state.formControls[formElementName].value, this.state.formControls[formElementName].validationRules);\r\n    \r\n \r\n        this.setState(this.state);\r\n        formIsValid = this.state.formControls[formElementName].valid && formIsValid;\r\n    }\r\n\r\n     let newState = this.state;\r\n newState.formIsValid = formIsValid;\r\nthis.setState(newState);\r\nthis.fetchCaregiver();\r\n}\r\n\r\n\r\n \r\n\r\n\r\nhandleChange (event) {\r\n\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    const updatedControls = this.state.formControls;\r\n\r\n    const updatedFormElement = updatedControls[name];\r\n\r\n    updatedFormElement.value = value;\r\n    updatedFormElement.touched = true;\r\n    updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\r\n    updatedControls[name] = updatedFormElement;\r\n \r\n    let formIsValid = true;\r\n    for (let updatedFormElementName in updatedControls) {\r\n        formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\r\n    }\r\n\r\n   \r\n    let newState = this.state;\r\nnewState.formControls = updatedControls;\r\nnewState.formIsValid = formIsValid;\r\nthis.setState(newState);\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nregisterPatient(patient) {\r\n    return PATIENT_API.postUpdatePatient(patient, (result, status, error) => {\r\n        if (result !== null && (status === 200 || status === 201)) {\r\n            console.log(\"Successfully updated patient with id: \" + result);\r\n             \r\n            this.state.messsage =\"Successfully updated patient with id: \" + result;\r\n            this.state.showMessage = true;\r\n            this.setState(this.state);\r\n\r\n         } else {\r\n            let newState = this.state;\r\n            newState.errorStatus = status;\r\n            newState.error = error;\r\n            this.setState(newState);\r\n        }\r\n    });\r\n}\r\n\r\ndeletePatient(patientId) {\r\n    return PATIENT_API.deletePatient(patientId, (result, status, error) => {\r\n        if (result !== null && (status === 200 || status === 201)) {\r\n            console.log(\"Successfully deleted patient with id: \" + result);\r\n             \r\n            this.state.messsage =\"Successfully deleted patient with id: \" + result;\r\n            this.state.showMessage = true;\r\n            this.setState(this.state);\r\n\r\n         } else {\r\n            let newState = this.state;\r\n            newState.errorStatus = status;\r\n            newState.error = error;\r\n            this.setState(newState);\r\n        }\r\n    });\r\n}\r\ntoogleMessage()\r\n{\r\n    this.state.showMessage = false;\r\n    this.setState(this.state);\r\n}\r\ngoToPatientHome()\r\n{\r\n    this.state.redirectTo = \"/doctorHome\";\r\n    this.state.redirect = true;\r\n    this.setState(this.state);\r\n}\r\nhandleSubmit() {\r\n    let patient = {\r\n        id : this.state.patientId,\r\n        name: this.state.formControls.name.value,\r\n        username: this.state.formControls.username.value,\r\n        password: this.state.formControls.password.value,\r\n        birthDate: this.state.formControls.birthDate.value,\r\n        gender: this.state.formControls.gender.value,\r\n        address: this.state.formControls.address.value,\r\n        medicalRecord : this.state.formControls.medicalRecord.value\r\n\r\n     };\r\n\r\n    console.log(patient);\r\n    this.registerPatient(patient);\r\n}\r\n\r\nhandleDelete() {\r\n    let patientId = this.state.patientId;\r\n\r\n     this.deletePatient(patientId);\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n    render() {\r\n        console.log(\"REDER);\");\r\n        console.log(this.state.isLoaded);\r\n        console.log(this.state.redirect);\r\n\r\n        return (\r\n            <div>\r\n\r\n                \r\n                 {this.state.redirect === false &&    <p> {this.state.patientId}</p>}\r\n                { this.state.redirect === false && this.state.isLoaded === true  &&  <div><p> {JSON.stringify(this.state.patient)}</p> <Button color=\"primary\"> {this.state.patientId}</Button></div> }\r\n                 {this.state.redirect === true && <Redirect to = {this.state.redirectTo}/>}\r\n\r\n                 <Button type={\"submit\"}   onClick={this.goToPatientHome}>  Go to Doctor Home Page </Button>\r\n                 <FormGroup id='name'>\r\n                    <Label for='nameField'> Name: </Label>\r\n                    <Input name='name' id='nameField' placeholder={this.state.formControls.name.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.name.value}\r\n                           touched={this.state.formControls.name.touched? 1 : 0}\r\n                           valid={this.state.formControls.name.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.name.touched && !this.state.formControls.name.valid &&\r\n                    <div className={\"error-message row\"}> * Name must have at least 3 characters </div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='username'>\r\n                    <Label for='usernameField'> Username: </Label>\r\n                    <Input name='username' id='usernameField' placeholder={this.state.formControls.username.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.username.value}\r\n                           touched={this.state.formControls.username.touched? 1 : 0}\r\n                           valid={this.state.formControls.username.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.username.touched && !this.state.formControls.username.valid &&\r\n                    <div className={\"error-message\"}> * Username must have at least 3 characters</div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='password'>\r\n                    <Label for='passwordField'> Password: </Label>\r\n                    <Input name='password' id='passwordField' placeholder={this.state.formControls.password.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.password.value}\r\n                           touched={this.state.formControls.password.touched? 1 : 0}\r\n                           valid={this.state.formControls.password.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.password.touched && !this.state.formControls.password.valid &&\r\n                    <div className={\"error-message\"}> * Password must have at least 3 characters</div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='birthDate'>\r\n                    <Label for='birthDateField'> birthDate: </Label>\r\n                    <Input name='birthDate' id='birthDateField' placeholder={this.state.formControls.birthDate.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.birthDate.value}\r\n                           touched={this.state.formControls.birthDate.touched? 1 : 0}\r\n                           valid={this.state.formControls.birthDate.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.birthDate.touched && !this.state.formControls.birthDate.valid &&\r\n                    <div className={\"error-message\"}> * Not valid format</div>}\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup id='gender'>\r\n                    <Label for='genderField'> gender: </Label>\r\n                    <Input name='gender' id='genderField' placeholder={this.state.formControls.gender.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.gender.value}\r\n                           touched={this.state.formControls.gender.touched? 1 : 0}\r\n                           valid={this.state.formControls.gender.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.gender.touched && !this.state.formControls.gender.valid &&\r\n                    <div className={\"error-message\"}> * gender must have at least 3 characters</div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='address'>\r\n                    <Label for='addressField'> address: </Label>\r\n                    <Input name='address' id='addressField' placeholder={this.state.formControls.address.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.address.value}\r\n                           touched={this.state.formControls.address.touched? 1 : 0}\r\n                           valid={this.state.formControls.address.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.address.touched && !this.state.formControls.address.valid &&\r\n                    <div className={\"error-message\"}> * address must have at least 3 characters</div>}\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup id='medicalRecord'>\r\n                    <Label for='medicalRecordField'> medicalRecord: </Label>\r\n                    <Input name='medicalRecord' id='medicalRecordField' placeholder={this.state.formControls.medicalRecord.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.medicalRecord.value}\r\n                           touched={this.state.formControls.medicalRecord.touched? 1 : 0}\r\n                           valid={this.state.formControls.medicalRecord.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.medicalRecord.touched && !this.state.formControls.medicalRecord.valid &&\r\n                    <div className={\"error-message\"}> * medicalRecord must have at least 3 characters</div>}\r\n                </FormGroup>\r\n\r\n\r\n\r\n\r\n                <Row>\r\n                        <Col sm={{size: '4', offset: 8}}>\r\n                            <Button type={\"submit\"} disabled={!this.state.formIsValid} onClick={this.handleSubmit}>  Update </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm={{size: '4', offset: 1}}>\r\n                            <Button type={\"delete\"}  onClick={this.handleDelete}>  Delete </Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    \r\n               {this.state.showMessage && \r\n                     <div>\r\n                            <p>{this.state.messsage}</p>\r\n                            <Button type={\"submit\"}   onClick={this.toogleMessage}>  OK </Button>\r\n                            </div>\r\n                        \r\n                    \r\n    }\r\n\r\n\r\n                  {  <div><CardHeader>\r\n                    <strong> Caregiever management </strong>\r\n                </CardHeader>\r\n                <Card>\r\n                     { this.state.isLoadedCaregiver && <p>Caregiver : {this.state.caregiver.username} - {this.state.caregiver.name}</p>}\r\n                     { !this.state.isLoadedCaregiver && <p> Unknown caregiver</p>}\r\n\r\n\r\n                     <Row>\r\n                        <Col sm={{size: '8', offset: 1}}>\r\n                            {this.state.isLoadedTableDataCaregiver && <PatientCaregiverTable tableData = {this.state.tableDataCaregiver}/>}\r\n                            {this.state.errorStatusCaregiverTable > 0 && <APIResponseErrorMessage\r\n                                                            errorStatus={this.state.errorStatusCaregiverTable}\r\n                                                            error={this.state.errorCaregiverTable}\r\n                                                        />   }\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n\r\n\r\n                </Card> \r\n                </div>\r\n                }\r\n\r\n                            \r\n\r\n\r\n    {this.state.showMessage && \r\n\r\n<Modal isOpen={this.state.showMessage} toggle={this.toogleMessage}\r\nclassName={this.props.className} size=\"lg\">\r\n<ModalHeader toggle={this.toogleMessage}> {this.state.messsage} </ModalHeader>\r\n \r\n</Modal>\r\n    }\r\n\r\n                    {\r\n                    this.state.errorStatus > 0 &&\r\n                    <APIResponseErrorMessage errorStatus={this.state.errorStatus} error={this.state.error}/>\r\n                }\r\n\r\n\r\n            \r\n                    \r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nexport default PatientPage;\r\n"]},"metadata":{},"sourceType":"module"}