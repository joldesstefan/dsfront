{"ast":null,"code":"import _classCallCheck from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\DS\\\\react-demo\\\\src\\\\patient\\\\patient-home.js\";\nimport React from 'react';\nimport validate from \"./validators/patient-validators\";\nimport Button from \"react-bootstrap/Button\";\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport { Col, Row } from \"reactstrap\";\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport { Redirect } from 'react-router';\nimport * as PATIENT_API from \"./api/patient-api\";\nimport * as CAREGIVER_API from \"../caregiver/api/caregiver-api\";\nimport * as MEDICATION_PERIOD_API from \"../medication-period/api/medication-period-api\";\nimport { Card, CardHeader, Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport PatientCaregiverTable from './patient-caregiver-table';\nimport MedicationPeriodTable from '../medication-period/medication-period-table';\nimport MedicationPeriodForm from '../medication-period/medication-period-form';\n\nvar PatientHome =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PatientHome, _React$Component);\n\n  function PatientHome(props) {\n    var _this;\n\n    _classCallCheck(this, PatientHome);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientHome).call(this, props));\n    _this.state = {\n      patientId: props.match.params.id,\n      patient: null,\n      isLoadedPatient: false,\n      errorPatient: null,\n      errorStatusPatient: 0,\n      caregiver: null,\n      isLoadedCaregiver: false,\n      errorCaregiver: null,\n      errorStatusCaregiver: 0,\n      medicationPeriods: [],\n      isLoadedMedicactionPeriods: false,\n      errorMedicationPeriods: null,\n      errorStatusMedicationPeriods: 0\n    };\n    _this.fetchPatient = _this.fetchPatient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.afterFetchPatient = _this.afterFetchPatient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchCaregiver = _this.fetchCaregiver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PatientHome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPatient();\n    }\n  }, {\n    key: \"fetchPatient\",\n    value: function fetchPatient() {\n      var _this2 = this;\n\n      var newParams = {\n        \"id\": this.state.patientId\n      };\n      return PATIENT_API.getPatientById(newParams, function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this2.state.patient = result;\n          _this2.state.isLoadedPatient = true;\n\n          _this2.setState(_this2.state);\n\n          _this2.afterFetchPatient();\n        } else {\n          _this2.state.errorStatus = status;\n          _this2.state.error = err;\n\n          _this2.setState(_this2.state);\n        }\n      });\n    }\n  }, {\n    key: \"afterFetchPatient\",\n    value: function afterFetchPatient() {\n      if (this.state.patient.caregiverId != null) {\n        this.fetchCaregiver();\n      }\n    }\n  }, {\n    key: \"fetchCaregiver\",\n    value: function fetchCaregiver() {\n      var _this3 = this;\n\n      var newParams = {\n        \"id\": this.state.patient.caregiverId\n      };\n      return CAREGIVER_API.getCaregiverById(newParams, function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this3.state.caregiver = result;\n          _this3.state.isLoadedCaregiver = true;\n\n          _this3.setState(_this3.state);\n        } else {\n          _this3.state.errorStatusCaregiver = status;\n          _this3.state.errorCaregiver = err;\n\n          _this3.setState(_this3.state);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.state.isLoadedPatient && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, JSON.stringify(this.state.patient), \" \"), this.state.isLoadedCaregiver && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, JSON.stringify(this.state.caregiver), \" \"));\n    }\n  }]);\n\n  return PatientHome;\n}(React.Component);\n\nexport default PatientHome;","map":{"version":3,"sources":["D:\\DS\\react-demo\\src\\patient\\patient-home.js"],"names":["React","validate","Button","APIResponseErrorMessage","Col","Row","FormGroup","Input","Label","Redirect","PATIENT_API","CAREGIVER_API","MEDICATION_PERIOD_API","Card","CardHeader","Modal","ModalBody","ModalHeader","PatientCaregiverTable","MedicationPeriodTable","MedicationPeriodForm","PatientHome","props","state","patientId","match","params","id","patient","isLoadedPatient","errorPatient","errorStatusPatient","caregiver","isLoadedCaregiver","errorCaregiver","errorStatusCaregiver","medicationPeriods","isLoadedMedicactionPeriods","errorMedicationPeriods","errorStatusMedicationPeriods","fetchPatient","bind","afterFetchPatient","fetchCaregiver","newParams","getPatientById","result","status","err","setState","errorStatus","error","caregiverId","getCaregiverById","JSON","stringify","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport validate from \"./validators/patient-validators\";\r\nimport Button from \"react-bootstrap/Button\";\r\n import APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\r\nimport {Col, Row} from \"reactstrap\";\r\nimport { FormGroup, Input, Label} from 'reactstrap';\r\nimport { Redirect } from 'react-router';\r\nimport * as PATIENT_API from \"./api/patient-api\";\r\nimport * as CAREGIVER_API from \"../caregiver/api/caregiver-api\";\r\nimport * as MEDICATION_PERIOD_API from \"../medication-period/api/medication-period-api\";\r\n\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader\r\n} from 'reactstrap';\r\nimport PatientCaregiverTable from './patient-caregiver-table';\r\nimport MedicationPeriodTable from '../medication-period/medication-period-table'\r\nimport MedicationPeriodForm from '../medication-period/medication-period-form'\r\n\r\nclass PatientHome extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n\r\n            patientId : props.match.params.id,\r\n            \r\n            patient : null,\r\n            isLoadedPatient : false ,\r\n            errorPatient : null,\r\n            errorStatusPatient: 0,\r\n\r\n\r\n            caregiver: null,\r\n            isLoadedCaregiver: false,\r\n            errorCaregiver : null,\r\n            errorStatusCaregiver: 0,\r\n\r\n            medicationPeriods : [],\r\n            isLoadedMedicactionPeriods: false,\r\n            errorMedicationPeriods : null,\r\n            errorStatusMedicationPeriods: 0,\r\n            \r\n\r\n        }\r\n        this.fetchPatient = this.fetchPatient.bind(this);\r\n        this.afterFetchPatient = this.afterFetchPatient.bind(this);\r\n\r\n        this.fetchCaregiver = this.fetchCaregiver.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\nthis.fetchPatient();\r\n    }\r\n    fetchPatient() {\r\n        let newParams = {\"id\" :  this.state.patientId};\r\n        return PATIENT_API.getPatientById(newParams,(result, status, err) => {\r\n            if (result !== null && status === 200) {\r\n                  this.state.patient = result;\r\n                 this.state.isLoadedPatient = true;\r\n\r\n                  this.setState(this.state);\r\n                 this.afterFetchPatient();\r\n             } else {\r\n                  this.state.errorStatus = status;\r\n                 this.state.error = err;\r\n                 this.setState(this.state);\r\n                 \r\n            }\r\n         \r\n        });\r\n    }\r\n\r\n    afterFetchPatient() {\r\n         if(this.state.patient.caregiverId != null)\r\n         {\r\n             this.fetchCaregiver();\r\n             \r\n         }\r\n    }\r\n\r\n    fetchCaregiver() {\r\n        let newParams = {\"id\" :  this.state.patient.caregiverId};\r\n        return CAREGIVER_API.getCaregiverById(newParams,(result, status, err) => {\r\n            if (result !== null && status === 200) {\r\n                  this.state.caregiver = result;\r\n                 this.state.isLoadedCaregiver = true;\r\n\r\n                  this.setState(this.state);\r\n              } else {\r\n                  this.state.errorStatusCaregiver = status;\r\n                 this.state.errorCaregiver = err;\r\n                 this.setState(this.state);\r\n                 \r\n            }\r\n         \r\n        });\r\n    }\r\n    \r\n\r\n\r\n    render() {\r\n    \r\n\r\n        return (\r\n            <div>\r\n\r\n{this.state.isLoadedPatient && <p>{JSON.stringify(this.state.patient)} </p>}\r\n{this.state.isLoadedCaregiver && <p>{JSON.stringify(this.state.caregiver)} </p>}\r\n\r\n\r\n            </div>\r\n        );\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n}\r\nexport default PatientHome;\r\n"]},"metadata":{},"sourceType":"module"}