{"ast":null,"code":"import _classCallCheck from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\DS\\\\react-demo\\\\src\\\\person\\\\components\\\\person-page.js\";\nimport React from 'react';\nimport validate from \"./validators/person-validators\";\nimport Button from \"react-bootstrap/Button\";\nimport * as API_USERS from \"../api/person-api\";\nimport APIResponseErrorMessage from \"../../commons/errorhandling/api-response-error-message\";\nimport { Col, Row } from \"reactstrap\";\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport { Redirect } from 'react-router';\nimport * as API_USER from \"../api/person-api\";\n\nvar PersonPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PersonPage, _React$Component);\n\n  function PersonPage(props) {\n    var _this;\n\n    _classCallCheck(this, PersonPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PersonPage).call(this, props));\n\n    _this.handleChange = function (event) {\n      var name = event.target.name;\n      var value = event.target.value;\n      var updatedControls = _this.state.formControls;\n      var updatedFormElement = updatedControls[name];\n      updatedFormElement.value = value;\n      updatedFormElement.touched = true;\n      updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n      updatedControls[name] = updatedFormElement;\n      var formIsValid = true;\n\n      for (var updatedFormElementName in updatedControls) {\n        formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\n      }\n\n      var newState = _this.state;\n      newState.formControls = updatedControls;\n      newState.formIsValid = formIsValid;\n\n      _this.setState(newState);\n    };\n\n    _this.state = {\n      redirect: false,\n      redirectTo: \"/\",\n      personId: props.match.params.id,\n      person: null,\n      isLoaded: false,\n      errorStatus: 0,\n      error: \"\",\n      formIsValid: false,\n      formControls: {\n        name: {\n          value: '',\n          placeholder: 'Person Name:',\n          valid: true,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: true\n          }\n        },\n        email: {\n          value: '',\n          placeholder: 'Email: ',\n          valid: true,\n          touched: false,\n          validationRules: {\n            emailValidator: true\n          }\n        },\n        age: {\n          value: '',\n          placeholder: 'Age: ',\n          valid: true,\n          touched: false\n        },\n        address: {\n          value: '',\n          placeholder: 'Address: ',\n          valid: true,\n          touched: false\n        }\n      }\n    };\n    _this.fetchPersons = _this.fetchPersons.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.registerPerson = _this.registerPerson.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PersonPage, [{\n    key: \"fetchPersons\",\n    value: function fetchPersons() {\n      var _this2 = this;\n\n      var newParams = {\n        \"id\": this.state.personId\n      };\n      return API_USERS.getPersonById(newParams, function (result, status, err) {\n        if (result !== null && status === 200) {\n          var newState = _this2.state;\n          newState.person = result;\n          newState.isLoaded = true;\n          newState.formControls.name.value = result.name;\n          newState.formControls.age.value = result.age;\n          newState.formControls.address.value = result.address;\n\n          _this2.setState(newState);\n\n          console.log(\"LOOOADDDEEDDEE\");\n        } else {\n          var _newState = _this2.state;\n          _newState.errorStatus = status;\n          _newState.error = err;\n\n          _this2.setState(_newState);\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPersons();\n    }\n  }, {\n    key: \"registerPerson\",\n    value: function registerPerson(person) {\n      var _this3 = this;\n\n      return API_USERS.postUpdatePerson(person, function (result, status, error) {\n        if (result !== null && (status === 200 || status === 201)) {\n          console.log(\"Successfully inserted person with id: \" + result);\n        } else {\n          var newState = _this3.state;\n          newState.errorStatus = status;\n          newState.error = error;\n\n          _this3.setState(newState);\n        }\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var person = {\n        id: this.state.person.id,\n        name: this.state.formControls.name.value,\n        email: this.state.formControls.email.value,\n        age: this.state.formControls.age.value,\n        address: this.state.formControls.address.value\n      };\n      console.log(person);\n      this.registerPerson(person);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"REDER);\");\n      console.log(this.state.isLoaded);\n      console.log(this.state.redirect);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, this.state.redirect === false && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \" \", this.state.persionId), this.state.redirect === false && this.state.isLoaded === true && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \" \", JSON.stringify(this.state.person)), \" \", React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \" \", this.state.personId)), this.state.redirect === true && React.createElement(Redirect, {\n        to: this.state.redirectTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        id: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"nameField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \" Name: \"), React.createElement(Input, {\n        name: \"name\",\n        id: \"nameField\",\n        placeholder: this.state.formControls.name.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.name.value,\n        touched: this.state.formControls.name.touched ? 1 : 0,\n        valid: this.state.formControls.name.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), this.state.formControls.name.touched && !this.state.formControls.name.valid && React.createElement(\"div\", {\n        className: \"error-message row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \" * Name must have at least 3 characters \")), React.createElement(FormGroup, {\n        id: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"emailField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \" Email: \"), React.createElement(Input, {\n        name: \"email\",\n        id: \"emailField\",\n        placeholder: this.state.formControls.email.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.email.value,\n        touched: this.state.formControls.email.touched ? 1 : 0,\n        valid: this.state.formControls.email.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), this.state.formControls.email.touched && !this.state.formControls.email.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \" * Email must have a valid format\")), React.createElement(FormGroup, {\n        id: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"addressField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \" Address: \"), React.createElement(Input, {\n        name: \"address\",\n        id: \"addressField\",\n        placeholder: this.state.formControls.address.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.address.value,\n        touched: this.state.formControls.address.touched ? 1 : 0,\n        valid: this.state.formControls.address.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        id: \"age\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"ageField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \" Age: \"), React.createElement(Input, {\n        name: \"age\",\n        id: \"ageField\",\n        placeholder: this.state.formControls.age.placeholder,\n        min: 0,\n        max: 100,\n        type: \"number\",\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.age.value,\n        touched: this.state.formControls.age.touched ? 1 : 0,\n        valid: this.state.formControls.age.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '4',\n          offset: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        disabled: !this.state.formIsValid,\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"  Update \"))), this.state.errorStatus > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatus,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PersonPage;\n}(React.Component);\n\nexport default PersonPage;","map":{"version":3,"sources":["D:\\DS\\react-demo\\src\\person\\components\\person-page.js"],"names":["React","validate","Button","API_USERS","APIResponseErrorMessage","Col","Row","FormGroup","Input","Label","Redirect","API_USER","PersonPage","props","handleChange","event","name","target","value","updatedControls","state","formControls","updatedFormElement","touched","valid","validationRules","formIsValid","updatedFormElementName","newState","setState","redirect","redirectTo","personId","match","params","id","person","isLoaded","errorStatus","error","placeholder","minLength","isRequired","email","emailValidator","age","address","fetchPersons","bind","handleSubmit","registerPerson","newParams","getPersonById","result","status","err","console","log","postUpdatePerson","persionId","JSON","stringify","size","offset","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport validate from \"./validators/person-validators\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as API_USERS from \"../api/person-api\";\r\nimport APIResponseErrorMessage from \"../../commons/errorhandling/api-response-error-message\";\r\nimport {Col, Row} from \"reactstrap\";\r\nimport { FormGroup, Input, Label} from 'reactstrap';\r\nimport { Redirect } from 'react-router';\r\nimport * as API_USER from \"../api/person-api\";\r\n\r\n \r\nclass PersonPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\nredirect : false,\r\nredirectTo : \"/\",\r\npersonId : props.match.params.id,\r\nperson : null,\r\nisLoaded : false,\r\nerrorStatus : 0,\r\nerror : \"\",\r\nformIsValid: false,\r\nformControls: {\r\n    name: {\r\n        value: '',\r\n        placeholder: 'Person Name:',\r\n        valid: true,\r\n        touched: false,\r\n        validationRules: {\r\n            minLength: 3,\r\n            isRequired: true\r\n        }\r\n    },\r\n    email: {\r\n        value: '',\r\n        placeholder: 'Email: ',\r\n        valid: true,\r\n        touched: false,\r\n        validationRules: {\r\n            emailValidator: true\r\n        }\r\n    },\r\n    age: {\r\n        value: '',\r\n        placeholder: 'Age: ',\r\n        valid: true,\r\n        touched: false,\r\n    },\r\n    address: {\r\n        value: '',\r\n        placeholder: 'Address: ',\r\n        valid: true,\r\n        touched: false,\r\n    },\r\n}\r\n\r\n \r\n        }\r\n            this.fetchPersons = this.fetchPersons.bind(this);\r\nthis.handleChange = this.handleChange.bind(this);\r\nthis.handleSubmit = this.handleSubmit.bind(this);\r\nthis.registerPerson = this.registerPerson.bind(this);\r\n    }\r\n\r\n    fetchPersons() {\r\n        let newParams = {\"id\" :  this.state.personId};\r\n        return API_USERS.getPersonById(newParams,(result, status, err) => {\r\n            if (result !== null && status === 200) {\r\n                  let newState = this.state;\r\n                 newState.person = result;\r\n                 newState.isLoaded = true;\r\n                 newState.formControls.name.value = result.name;\r\n                 newState.formControls.age.value = result.age;\r\n                 newState.formControls.address.value = result.address;\r\n\r\n                 this.setState(newState);\r\n                 console.log (\"LOOOADDDEEDDEE\");\r\n            } else {\r\n                 let newState = this.state;\r\n                 newState.errorStatus = status;\r\n                 newState.error = err;\r\n                 this.setState(newState);\r\n                 \r\n            }\r\n         \r\n        });\r\n    }\r\ncomponentDidMount()\r\n{\r\n    this.fetchPersons();\r\n}\r\n\r\n\r\n\r\nhandleChange = event => {\r\n\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    const updatedControls = this.state.formControls;\r\n\r\n    const updatedFormElement = updatedControls[name];\r\n\r\n    updatedFormElement.value = value;\r\n    updatedFormElement.touched = true;\r\n    updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\r\n    updatedControls[name] = updatedFormElement;\r\n\r\n    let formIsValid = true;\r\n    for (let updatedFormElementName in updatedControls) {\r\n        formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\r\n    }\r\n\r\n   \r\n    let newState = this.state;\r\nnewState.formControls = updatedControls;\r\nnewState.formIsValid = formIsValid;\r\nthis.setState(newState);\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nregisterPerson(person) {\r\n    return API_USERS.postUpdatePerson(person, (result, status, error) => {\r\n        if (result !== null && (status === 200 || status === 201)) {\r\n            console.log(\"Successfully inserted person with id: \" + result);\r\n         } else {\r\n            let newState = this.state;\r\n            newState.errorStatus = status;\r\n            newState.error = error;\r\n            this.setState(newState);\r\n        }\r\n    });\r\n}\r\n\r\nhandleSubmit() {\r\n    let person = {\r\n        id: this.state.person.id,\r\n        name: this.state.formControls.name.value,\r\n        email: this.state.formControls.email.value,\r\n        age: this.state.formControls.age.value,\r\n        address: this.state.formControls.address.value\r\n    };\r\n\r\n    console.log(person);\r\n    this.registerPerson(person);\r\n}\r\n\r\n\r\n\r\n\r\n    render() {\r\n        console.log(\"REDER);\");\r\n        console.log(this.state.isLoaded);\r\n        console.log(this.state.redirect);\r\n\r\n        return (\r\n            <div>\r\n\r\n                \r\n                 {this.state.redirect === false &&    <p> {this.state.persionId}</p>}\r\n                 { this.state.redirect === false && this.state.isLoaded === true  &&  <div><p> {JSON.stringify(this.state.person)}</p> <Button color=\"primary\"> {this.state.personId}</Button></div> }\r\n                 {this.state.redirect === true && <Redirect to = {this.state.redirectTo}/>}\r\n\r\n\r\n\r\n                < FormGroup id='name'>\r\n                    <Label for='nameField'> Name: </Label>\r\n                    <Input name='name' id='nameField' placeholder={this.state.formControls.name.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.name.value}\r\n                           touched={this.state.formControls.name.touched? 1 : 0}\r\n                           valid={this.state.formControls.name.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.name.touched && !this.state.formControls.name.valid &&\r\n                    <div className={\"error-message row\"}> * Name must have at least 3 characters </div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='email'>\r\n                    <Label for='emailField'> Email: </Label>\r\n                    <Input name='email' id='emailField' placeholder={this.state.formControls.email.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.email.value}\r\n                           touched={this.state.formControls.email.touched? 1 : 0}\r\n                           valid={this.state.formControls.email.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.email.touched && !this.state.formControls.email.valid &&\r\n                    <div className={\"error-message\"}> * Email must have a valid format</div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='address'>\r\n                    <Label for='addressField'> Address: </Label>\r\n                    <Input name='address' id='addressField' placeholder={this.state.formControls.address.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.address.value}\r\n                           touched={this.state.formControls.address.touched? 1 : 0}\r\n                           valid={this.state.formControls.address.valid}\r\n                           required\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup id='age'>\r\n                    <Label for='ageField'> Age: </Label>\r\n                    <Input name='age' id='ageField' placeholder={this.state.formControls.age.placeholder}\r\n                           min={0} max={100} type=\"number\"\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.age.value}\r\n                           touched={this.state.formControls.age.touched? 1 : 0}\r\n                           valid={this.state.formControls.age.valid}\r\n                           required\r\n                    />\r\n                </FormGroup>\r\n\r\n                <Row>\r\n                        <Col sm={{size: '4', offset: 8}}>\r\n                            <Button type={\"submit\"} disabled={!this.state.formIsValid} onClick={this.handleSubmit}>  Update </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                    this.state.errorStatus > 0 &&\r\n                    <APIResponseErrorMessage errorStatus={this.state.errorStatus} error={this.state.error}/>\r\n                }\r\n                    \r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nexport default PersonPage;\r\n"]},"metadata":{},"sourceType":"module"}