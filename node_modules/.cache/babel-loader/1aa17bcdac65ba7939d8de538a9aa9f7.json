{"ast":null,"code":"import _classCallCheck from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\DS\\\\react-demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\DS\\\\react-demo\\\\src\\\\caregiver\\\\caregiver-form.js\";\nimport React from 'react';\nimport validate from \"./validators/caregiver-validators\";\nimport Button from \"react-bootstrap/Button\";\nimport * as DOCTOR_API from \"./api/caregiver-api\";\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport { Col, Row } from \"reactstrap\";\nimport { FormGroup, Input, Label } from 'reactstrap';\n\nvar CaregiverForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CaregiverForm, _React$Component);\n\n  function CaregiverForm(props) {\n    var _this;\n\n    _classCallCheck(this, CaregiverForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CaregiverForm).call(this, props));\n\n    _this.handleChange = function (event) {\n      var name = event.target.name;\n      var value = event.target.value;\n      var updatedControls = _this.state.formControls;\n      var updatedFormElement = updatedControls[name];\n      updatedFormElement.value = value;\n      updatedFormElement.touched = true;\n      updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n      updatedControls[name] = updatedFormElement;\n      var formIsValid = true;\n\n      for (var updatedFormElementName in updatedControls) {\n        formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\n      }\n\n      _this.setState({\n        formControls: updatedControls,\n        formIsValid: formIsValid\n      });\n    };\n\n    _this.toggleForm = _this.toggleForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reloadHandler = _this.props.reloadHandler;\n    _this.state = {\n      errorStatus: 0,\n      error: null,\n      formIsValid: false,\n      formControls: {\n        name: {\n          value: '',\n          placeholder: 'What is the caregiver\\'s name?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: false\n          }\n        },\n        username: {\n          value: '',\n          placeholder: 'What is the caregiver\\'s Username?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: true\n          }\n        },\n        password: {\n          value: '',\n          placeholder: 'What is the caregiver\\'s Password?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: false\n          }\n        },\n        birthDate: {\n          value: '',\n          placeholder: 'What is the caregiver\\'s Birth Date?...YYYY-MM-DD',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 10,\n            isRequired: false,\n            dateValidator: true\n          }\n        },\n        gender: {\n          value: '',\n          placeholder: 'What is the caregiver\\'s Gender ?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: false\n          }\n        },\n        address: {\n          value: '',\n          placeholder: 'What is the caregiver\\'s Address ?',\n          valid: false,\n          touched: false,\n          validationRules: {\n            minLength: 3,\n            isRequired: false\n          }\n        }\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CaregiverForm, [{\n    key: \"toggleForm\",\n    value: function toggleForm() {\n      this.setState({\n        collapseForm: !this.state.collapseForm\n      });\n    }\n  }, {\n    key: \"registerCaregiver\",\n    value: function registerCaregiver(caregiver) {\n      var _this2 = this;\n\n      return DOCTOR_API.postCaregiver(caregiver, function (result, status, error) {\n        if (result !== null && (status === 200 || status === 201)) {\n          console.log(\"Successfully inserted caregiver with id: \" + result);\n\n          _this2.reloadHandler();\n        } else {\n          _this2.setState({\n            errorStatus: status,\n            error: error\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var caregiver = {\n        name: this.state.formControls.name.value,\n        username: this.state.formControls.username.value,\n        password: this.state.formControls.password.value,\n        birthDate: this.state.formControls.birthDate.value,\n        gender: this.state.formControls.gender.value,\n        address: this.state.formControls.address.value\n      };\n      console.log(caregiver);\n      this.registerCaregiver(caregiver);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        id: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"nameField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \" Name: \"), React.createElement(Input, {\n        name: \"name\",\n        id: \"nameField\",\n        placeholder: this.state.formControls.name.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.name.value,\n        touched: this.state.formControls.name.touched ? 1 : 0,\n        valid: this.state.formControls.name.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), this.state.formControls.name.touched && !this.state.formControls.name.valid && React.createElement(\"div\", {\n        className: \"error-message row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \" * Name must have at least 3 characters \")), React.createElement(FormGroup, {\n        id: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"usernameField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \" Username: \"), React.createElement(Input, {\n        name: \"username\",\n        id: \"usernameField\",\n        placeholder: this.state.formControls.username.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.username.value,\n        touched: this.state.formControls.username.touched ? 1 : 0,\n        valid: this.state.formControls.username.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), this.state.formControls.username.touched && !this.state.formControls.username.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \" * Username must have at least 3 characters\")), React.createElement(FormGroup, {\n        id: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"passwordField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \" Password: \"), React.createElement(Input, {\n        name: \"password\",\n        id: \"passwordField\",\n        placeholder: this.state.formControls.password.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.password.value,\n        touched: this.state.formControls.password.touched ? 1 : 0,\n        valid: this.state.formControls.password.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), this.state.formControls.password.touched && !this.state.formControls.password.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \" * Password must have at least 3 characters\")), React.createElement(FormGroup, {\n        id: \"birthDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"birthDateField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \" birthDate: \"), React.createElement(Input, {\n        name: \"birthDate\",\n        id: \"birthDateField\",\n        placeholder: this.state.formControls.birthDate.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.birthDate.value,\n        touched: this.state.formControls.birthDate.touched ? 1 : 0,\n        valid: this.state.formControls.birthDate.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), this.state.formControls.birthDate.touched && !this.state.formControls.birthDate.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \" * birthDate must have at least 3 characters\")), React.createElement(FormGroup, {\n        id: \"gender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"genderField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \" gender: \"), React.createElement(Input, {\n        name: \"gender\",\n        id: \"genderField\",\n        placeholder: this.state.formControls.gender.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.gender.value,\n        touched: this.state.formControls.gender.touched ? 1 : 0,\n        valid: this.state.formControls.gender.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), this.state.formControls.gender.touched && !this.state.formControls.gender.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \" * gender must have at least 3 characters\")), React.createElement(FormGroup, {\n        id: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"addressField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \" address: \"), React.createElement(Input, {\n        name: \"address\",\n        id: \"addressField\",\n        placeholder: this.state.formControls.address.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.address.value,\n        touched: this.state.formControls.address.touched ? 1 : 0,\n        valid: this.state.formControls.address.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), this.state.formControls.address.touched && !this.state.formControls.address.valid && React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \" * address must have at least 3 characters\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '4',\n          offset: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        disabled: !this.state.formIsValid,\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"  Submit \"))), this.state.errorStatus > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatus,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CaregiverForm;\n}(React.Component);\n\nexport default CaregiverForm;","map":{"version":3,"sources":["D:\\DS\\react-demo\\src\\caregiver\\caregiver-form.js"],"names":["React","validate","Button","DOCTOR_API","APIResponseErrorMessage","Col","Row","FormGroup","Input","Label","CaregiverForm","props","handleChange","event","name","target","value","updatedControls","state","formControls","updatedFormElement","touched","valid","validationRules","formIsValid","updatedFormElementName","setState","toggleForm","bind","reloadHandler","errorStatus","error","placeholder","minLength","isRequired","username","password","birthDate","dateValidator","gender","address","handleSubmit","collapseForm","caregiver","postCaregiver","result","status","console","log","registerCaregiver","size","offset","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport validate from \"./validators/caregiver-validators\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as DOCTOR_API from \"./api/caregiver-api\";\r\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\r\nimport {Col, Row} from \"reactstrap\";\r\nimport { FormGroup, Input, Label} from 'reactstrap';\r\n\r\n\r\n\r\nclass CaregiverForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.reloadHandler = this.props.reloadHandler;\r\n\r\n        this.state = {\r\n\r\n            errorStatus: 0,\r\n            error: null,\r\n\r\n            formIsValid: false,\r\n\r\n            formControls: {\r\n                name: {\r\n                    value: '',\r\n                    placeholder: 'What is the caregiver\\'s name?',\r\n                    valid: false,\r\n                    touched: false,\r\n                    validationRules: {\r\n                        minLength: 3,\r\n                        isRequired: false\r\n                    }\r\n                },\r\n                username: {\r\n                    value: '',\r\n                    placeholder: 'What is the caregiver\\'s Username?',\r\n                    valid: false,\r\n                    touched: false,\r\n                    validationRules: {\r\n                        minLength: 3,\r\n                        isRequired: true\r\n                    }\r\n                },\r\n                password: {\r\n                    value: '',\r\n                    placeholder: 'What is the caregiver\\'s Password?',\r\n                    valid: false,\r\n                    touched: false,\r\n                    validationRules: {\r\n                        minLength: 3,\r\n                        isRequired: false\r\n                    }\r\n                },\r\n                birthDate: {\r\n                    value: '',\r\n                    placeholder: 'What is the caregiver\\'s Birth Date?...YYYY-MM-DD',\r\n                    valid: false,\r\n                    touched: false,\r\n                    validationRules: {\r\n                        minLength: 10,\r\n                        isRequired: false,\r\n                        dateValidator: true\r\n                    }\r\n                },\r\n                gender: {\r\n                    value: '',\r\n                    placeholder: 'What is the caregiver\\'s Gender ?',\r\n                    valid: false,\r\n                    touched: false,\r\n                    validationRules: {\r\n                        minLength: 3,\r\n                        isRequired: false\r\n                    }\r\n                },\r\n                address: {\r\n                    value: '',\r\n                    placeholder: 'What is the caregiver\\'s Address ?',\r\n                    valid: false,\r\n                    touched: false,\r\n                    validationRules: {\r\n                        minLength: 3,\r\n                        isRequired: false\r\n                    }\r\n                }\r\n                \r\n\r\n                  \r\n            }\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n   toggleForm() {\r\n        this.setState({collapseForm: !this.state.collapseForm});\r\n    }\r\n\r\n\r\n    handleChange = event => {\r\n\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        const updatedControls = this.state.formControls;\r\n\r\n        const updatedFormElement = updatedControls[name];\r\n\r\n        updatedFormElement.value = value;\r\n        updatedFormElement.touched = true;\r\n        updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\r\n        updatedControls[name] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for (let updatedFormElementName in updatedControls) {\r\n            formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({\r\n            formControls: updatedControls,\r\n            formIsValid: formIsValid\r\n        });\r\n\r\n    };\r\n\r\n    registerCaregiver(caregiver) {\r\n        return DOCTOR_API.postCaregiver(caregiver, (result, status, error) => {\r\n            if (result !== null && (status === 200 || status === 201)) {\r\n                console.log(\"Successfully inserted caregiver with id: \" + result);\r\n                this.reloadHandler();\r\n            } else {\r\n                this.setState(({\r\n                    errorStatus: status,\r\n                    error: error\r\n                }));\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit() {\r\n        let caregiver = {\r\n            name: this.state.formControls.name.value,\r\n            username: this.state.formControls.username.value,\r\n            password: this.state.formControls.password.value,\r\n            birthDate: this.state.formControls.birthDate.value,\r\n            gender: this.state.formControls.gender.value,\r\n            address: this.state.formControls.address.value,\r\n \r\n         };\r\n\r\n        console.log(caregiver);\r\n        this.registerCaregiver(caregiver);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <FormGroup id='name'>\r\n                    <Label for='nameField'> Name: </Label>\r\n                    <Input name='name' id='nameField' placeholder={this.state.formControls.name.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.name.value}\r\n                           touched={this.state.formControls.name.touched? 1 : 0}\r\n                           valid={this.state.formControls.name.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.name.touched && !this.state.formControls.name.valid &&\r\n                    <div className={\"error-message row\"}> * Name must have at least 3 characters </div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='username'>\r\n                    <Label for='usernameField'> Username: </Label>\r\n                    <Input name='username' id='usernameField' placeholder={this.state.formControls.username.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.username.value}\r\n                           touched={this.state.formControls.username.touched? 1 : 0}\r\n                           valid={this.state.formControls.username.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.username.touched && !this.state.formControls.username.valid &&\r\n                    <div className={\"error-message\"}> * Username must have at least 3 characters</div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='password'>\r\n                    <Label for='passwordField'> Password: </Label>\r\n                    <Input name='password' id='passwordField' placeholder={this.state.formControls.password.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.password.value}\r\n                           touched={this.state.formControls.password.touched? 1 : 0}\r\n                           valid={this.state.formControls.password.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.password.touched && !this.state.formControls.password.valid &&\r\n                    <div className={\"error-message\"}> * Password must have at least 3 characters</div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='birthDate'>\r\n                    <Label for='birthDateField'> birthDate: </Label>\r\n                    <Input name='birthDate' id='birthDateField' placeholder={this.state.formControls.birthDate.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.birthDate.value}\r\n                           touched={this.state.formControls.birthDate.touched? 1 : 0}\r\n                           valid={this.state.formControls.birthDate.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.birthDate.touched && !this.state.formControls.birthDate.valid &&\r\n                    <div className={\"error-message\"}> * birthDate must have at least 3 characters</div>}\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup id='gender'>\r\n                    <Label for='genderField'> gender: </Label>\r\n                    <Input name='gender' id='genderField' placeholder={this.state.formControls.gender.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.gender.value}\r\n                           touched={this.state.formControls.gender.touched? 1 : 0}\r\n                           valid={this.state.formControls.gender.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.gender.touched && !this.state.formControls.gender.valid &&\r\n                    <div className={\"error-message\"}> * gender must have at least 3 characters</div>}\r\n                </FormGroup>\r\n\r\n                <FormGroup id='address'>\r\n                    <Label for='addressField'> address: </Label>\r\n                    <Input name='address' id='addressField' placeholder={this.state.formControls.address.placeholder}\r\n                           onChange={this.handleChange}\r\n                           defaultValue={this.state.formControls.address.value}\r\n                           touched={this.state.formControls.address.touched? 1 : 0}\r\n                           valid={this.state.formControls.address.valid}\r\n                           required\r\n                    />\r\n                    {this.state.formControls.address.touched && !this.state.formControls.address.valid &&\r\n                    <div className={\"error-message\"}> * address must have at least 3 characters</div>}\r\n                </FormGroup>\r\n              \r\n\r\n                    <Row>\r\n                        <Col sm={{size: '4', offset: 8}}>\r\n                            <Button type={\"submit\"} disabled={!this.state.formIsValid} onClick={this.handleSubmit}>  Submit </Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                {\r\n                    this.state.errorStatus > 0 &&\r\n                    <APIResponseErrorMessage errorStatus={this.state.errorStatus} error={this.state.error}/>\r\n                }\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nexport default CaregiverForm;\r\n"]},"metadata":{},"sourceType":"module"}